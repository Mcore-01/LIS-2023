/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 120.0, "minX": 0.0, "maxY": 21865.0, "series": [{"data": [[0.0, 779.0], [0.1, 779.0], [0.2, 779.0], [0.3, 779.0], [0.4, 986.0], [0.5, 986.0], [0.6, 986.0], [0.7, 986.0], [0.8, 1828.0], [0.9, 1828.0], [1.0, 1828.0], [1.1, 1828.0], [1.2, 3144.0], [1.3, 3144.0], [1.4, 3144.0], [1.5, 3144.0], [1.6, 3800.0], [1.7, 3800.0], [1.8, 3800.0], [1.9, 3800.0], [2.0, 3820.0], [2.1, 3820.0], [2.2, 3820.0], [2.3, 3885.0], [2.4, 3885.0], [2.5, 3885.0], [2.6, 3885.0], [2.7, 5289.0], [2.8, 5289.0], [2.9, 5289.0], [3.0, 5289.0], [3.1, 5327.0], [3.2, 5327.0], [3.3, 5327.0], [3.4, 5327.0], [3.5, 5489.0], [3.6, 5489.0], [3.7, 5489.0], [3.8, 5489.0], [3.9, 5508.0], [4.0, 5508.0], [4.1, 5508.0], [4.2, 5508.0], [4.3, 5524.0], [4.4, 5524.0], [4.5, 5524.0], [4.6, 5540.0], [4.7, 5540.0], [4.8, 5540.0], [4.9, 5540.0], [5.0, 5552.0], [5.1, 5552.0], [5.2, 5552.0], [5.3, 5552.0], [5.4, 5559.0], [5.5, 5559.0], [5.6, 5559.0], [5.7, 5559.0], [5.8, 5559.0], [5.9, 5559.0], [6.0, 5559.0], [6.1, 5559.0], [6.2, 5572.0], [6.3, 5572.0], [6.4, 5572.0], [6.5, 5572.0], [6.6, 5576.0], [6.7, 5576.0], [6.8, 5576.0], [6.9, 5696.0], [7.0, 5696.0], [7.1, 5696.0], [7.2, 5696.0], [7.3, 5712.0], [7.4, 5712.0], [7.5, 5712.0], [7.6, 5712.0], [7.7, 5858.0], [7.8, 5858.0], [7.9, 5858.0], [8.0, 5858.0], [8.1, 6048.0], [8.2, 6048.0], [8.3, 6048.0], [8.4, 6048.0], [8.5, 6064.0], [8.6, 6064.0], [8.7, 6064.0], [8.8, 6064.0], [8.9, 6074.0], [9.0, 6074.0], [9.1, 6074.0], [9.2, 6079.0], [9.3, 6079.0], [9.4, 6079.0], [9.5, 6079.0], [9.6, 6087.0], [9.7, 6087.0], [9.8, 6087.0], [9.9, 6087.0], [10.0, 6089.0], [10.1, 6089.0], [10.2, 6089.0], [10.3, 6089.0], [10.4, 6134.0], [10.5, 6134.0], [10.6, 6134.0], [10.7, 6134.0], [10.8, 6177.0], [10.9, 6177.0], [11.0, 6177.0], [11.1, 6177.0], [11.2, 6269.0], [11.3, 6269.0], [11.4, 6269.0], [11.5, 6333.0], [11.6, 6333.0], [11.7, 6333.0], [11.8, 6333.0], [11.9, 6352.0], [12.0, 6352.0], [12.1, 6352.0], [12.2, 6352.0], [12.3, 6375.0], [12.4, 6375.0], [12.5, 6375.0], [12.6, 6375.0], [12.7, 6427.0], [12.8, 6427.0], [12.9, 6427.0], [13.0, 6427.0], [13.1, 6430.0], [13.2, 6430.0], [13.3, 6430.0], [13.4, 6430.0], [13.5, 7136.0], [13.6, 7136.0], [13.7, 7136.0], [13.8, 7140.0], [13.9, 7140.0], [14.0, 7140.0], [14.1, 7140.0], [14.2, 7143.0], [14.3, 7143.0], [14.4, 7143.0], [14.5, 7143.0], [14.6, 7156.0], [14.7, 7156.0], [14.8, 7156.0], [14.9, 7156.0], [15.0, 7158.0], [15.1, 7158.0], [15.2, 7158.0], [15.3, 7158.0], [15.4, 7166.0], [15.5, 7166.0], [15.6, 7166.0], [15.7, 7166.0], [15.8, 7176.0], [15.9, 7176.0], [16.0, 7176.0], [16.1, 15136.0], [16.2, 15136.0], [16.3, 15136.0], [16.4, 15136.0], [16.5, 15142.0], [16.6, 15142.0], [16.7, 15142.0], [16.8, 15142.0], [16.9, 15142.0], [17.0, 15142.0], [17.1, 15142.0], [17.2, 15142.0], [17.3, 15143.0], [17.4, 15143.0], [17.5, 15143.0], [17.6, 15143.0], [17.7, 15143.0], [17.8, 15143.0], [17.9, 15143.0], [18.0, 15143.0], [18.1, 15144.0], [18.2, 15144.0], [18.3, 15144.0], [18.4, 15145.0], [18.5, 15145.0], [18.6, 15145.0], [18.7, 15145.0], [18.8, 15146.0], [18.9, 15146.0], [19.0, 15146.0], [19.1, 15146.0], [19.2, 15146.0], [19.3, 15146.0], [19.4, 15146.0], [19.5, 15146.0], [19.6, 15147.0], [19.7, 15147.0], [19.8, 15147.0], [19.9, 15147.0], [20.0, 15147.0], [20.1, 15147.0], [20.2, 15147.0], [20.3, 15147.0], [20.4, 15148.0], [20.5, 15148.0], [20.6, 15148.0], [20.7, 15150.0], [20.8, 15150.0], [20.9, 15150.0], [21.0, 15150.0], [21.1, 15150.0], [21.2, 15150.0], [21.3, 15150.0], [21.4, 15150.0], [21.5, 15151.0], [21.6, 15151.0], [21.7, 15151.0], [21.8, 15151.0], [21.9, 15151.0], [22.0, 15151.0], [22.1, 15151.0], [22.2, 15151.0], [22.3, 15151.0], [22.4, 15151.0], [22.5, 15151.0], [22.6, 15151.0], [22.7, 15152.0], [22.8, 15152.0], [22.9, 15152.0], [23.0, 15152.0], [23.1, 15152.0], [23.2, 15152.0], [23.3, 15152.0], [23.4, 15152.0], [23.5, 15152.0], [23.6, 15152.0], [23.7, 15152.0], [23.8, 15153.0], [23.9, 15153.0], [24.0, 15153.0], [24.1, 15153.0], [24.2, 15153.0], [24.3, 15153.0], [24.4, 15153.0], [24.5, 15153.0], [24.6, 15153.0], [24.7, 15153.0], [24.8, 15153.0], [24.9, 15153.0], [25.0, 15153.0], [25.1, 15153.0], [25.2, 15153.0], [25.3, 15154.0], [25.4, 15154.0], [25.5, 15154.0], [25.6, 15154.0], [25.7, 15154.0], [25.8, 15154.0], [25.9, 15154.0], [26.0, 15154.0], [26.1, 15154.0], [26.2, 15154.0], [26.3, 15154.0], [26.4, 15154.0], [26.5, 15154.0], [26.6, 15154.0], [26.7, 15154.0], [26.8, 15154.0], [26.9, 15155.0], [27.0, 15155.0], [27.1, 15155.0], [27.2, 15155.0], [27.3, 15155.0], [27.4, 15155.0], [27.5, 15155.0], [27.6, 15155.0], [27.7, 15155.0], [27.8, 15155.0], [27.9, 15155.0], [28.0, 15155.0], [28.1, 15155.0], [28.2, 15155.0], [28.3, 15155.0], [28.4, 15155.0], [28.5, 15155.0], [28.6, 15155.0], [28.7, 15155.0], [28.8, 15156.0], [28.9, 15156.0], [29.0, 15156.0], [29.1, 15156.0], [29.2, 15156.0], [29.3, 15156.0], [29.4, 15156.0], [29.5, 15156.0], [29.6, 15156.0], [29.7, 15156.0], [29.8, 15156.0], [29.9, 15156.0], [30.0, 15156.0], [30.1, 15156.0], [30.2, 15156.0], [30.3, 15156.0], [30.4, 15156.0], [30.5, 15156.0], [30.6, 15156.0], [30.7, 15156.0], [30.8, 15156.0], [30.9, 15156.0], [31.0, 15156.0], [31.1, 15157.0], [31.2, 15157.0], [31.3, 15157.0], [31.4, 15157.0], [31.5, 15157.0], [31.6, 15157.0], [31.7, 15157.0], [31.8, 15157.0], [31.9, 15157.0], [32.0, 15157.0], [32.1, 15157.0], [32.2, 15157.0], [32.3, 15157.0], [32.4, 15157.0], [32.5, 15157.0], [32.6, 15157.0], [32.7, 15157.0], [32.8, 15157.0], [32.9, 15157.0], [33.0, 15158.0], [33.1, 15158.0], [33.2, 15158.0], [33.3, 15158.0], [33.4, 15158.0], [33.5, 15158.0], [33.6, 15158.0], [33.7, 15158.0], [33.8, 15158.0], [33.9, 15158.0], [34.0, 15158.0], [34.1, 15158.0], [34.2, 15158.0], [34.3, 15158.0], [34.4, 15158.0], [34.5, 15158.0], [34.6, 15158.0], [34.7, 15158.0], [34.8, 15158.0], [34.9, 15159.0], [35.0, 15159.0], [35.1, 15159.0], [35.2, 15159.0], [35.3, 15159.0], [35.4, 15159.0], [35.5, 15159.0], [35.6, 15159.0], [35.7, 15159.0], [35.8, 15159.0], [35.9, 15159.0], [36.0, 15159.0], [36.1, 15159.0], [36.2, 15159.0], [36.3, 15159.0], [36.4, 15159.0], [36.5, 15159.0], [36.6, 15159.0], [36.7, 15159.0], [36.8, 15160.0], [36.9, 15160.0], [37.0, 15160.0], [37.1, 15160.0], [37.2, 15160.0], [37.3, 15160.0], [37.4, 15160.0], [37.5, 15160.0], [37.6, 15160.0], [37.7, 15160.0], [37.8, 15160.0], [37.9, 15160.0], [38.0, 15160.0], [38.1, 15160.0], [38.2, 15160.0], [38.3, 15160.0], [38.4, 15160.0], [38.5, 15160.0], [38.6, 15160.0], [38.7, 15160.0], [38.8, 15160.0], [38.9, 15160.0], [39.0, 15160.0], [39.1, 15160.0], [39.2, 15160.0], [39.3, 15160.0], [39.4, 15160.0], [39.5, 15161.0], [39.6, 15161.0], [39.7, 15161.0], [39.8, 15161.0], [39.9, 15161.0], [40.0, 15161.0], [40.1, 15161.0], [40.2, 15161.0], [40.3, 15161.0], [40.4, 15161.0], [40.5, 15161.0], [40.6, 15161.0], [40.7, 15161.0], [40.8, 15161.0], [40.9, 15161.0], [41.0, 15161.0], [41.1, 15161.0], [41.2, 15161.0], [41.3, 15161.0], [41.4, 15161.0], [41.5, 15161.0], [41.6, 15161.0], [41.7, 15161.0], [41.8, 15161.0], [41.9, 15161.0], [42.0, 15161.0], [42.1, 15161.0], [42.2, 15161.0], [42.3, 15161.0], [42.4, 15161.0], [42.5, 15161.0], [42.6, 15161.0], [42.7, 15161.0], [42.8, 15161.0], [42.9, 15161.0], [43.0, 15162.0], [43.1, 15162.0], [43.2, 15162.0], [43.3, 15162.0], [43.4, 15162.0], [43.5, 15162.0], [43.6, 15162.0], [43.7, 15162.0], [43.8, 15162.0], [43.9, 15162.0], [44.0, 15162.0], [44.1, 15162.0], [44.2, 15162.0], [44.3, 15162.0], [44.4, 15162.0], [44.5, 15162.0], [44.6, 15162.0], [44.7, 15162.0], [44.8, 15162.0], [44.9, 15162.0], [45.0, 15162.0], [45.1, 15162.0], [45.2, 15162.0], [45.3, 15162.0], [45.4, 15162.0], [45.5, 15162.0], [45.6, 15162.0], [45.7, 15162.0], [45.8, 15162.0], [45.9, 15162.0], [46.0, 15162.0], [46.1, 15162.0], [46.2, 15162.0], [46.3, 15162.0], [46.4, 15162.0], [46.5, 15162.0], [46.6, 15162.0], [46.7, 15162.0], [46.8, 15162.0], [46.9, 15162.0], [47.0, 15162.0], [47.1, 15162.0], [47.2, 15162.0], [47.3, 15162.0], [47.4, 15162.0], [47.5, 15162.0], [47.6, 15162.0], [47.7, 15162.0], [47.8, 15162.0], [47.9, 15163.0], [48.0, 15163.0], [48.1, 15163.0], [48.2, 15163.0], [48.3, 15163.0], [48.4, 15163.0], [48.5, 15163.0], [48.6, 15163.0], [48.7, 15163.0], [48.8, 15163.0], [48.9, 15163.0], [49.0, 15163.0], [49.1, 15163.0], [49.2, 15163.0], [49.3, 15163.0], [49.4, 15163.0], [49.5, 15163.0], [49.6, 15163.0], [49.7, 15163.0], [49.8, 15163.0], [49.9, 15163.0], [50.0, 15163.0], [50.1, 15163.0], [50.2, 15163.0], [50.3, 15163.0], [50.4, 15163.0], [50.5, 15163.0], [50.6, 15164.0], [50.7, 15164.0], [50.8, 15164.0], [50.9, 15164.0], [51.0, 15164.0], [51.1, 15164.0], [51.2, 15164.0], [51.3, 15164.0], [51.4, 15164.0], [51.5, 15164.0], [51.6, 15164.0], [51.7, 15164.0], [51.8, 15164.0], [51.9, 15164.0], [52.0, 15164.0], [52.1, 15164.0], [52.2, 15164.0], [52.3, 15164.0], [52.4, 15164.0], [52.5, 15164.0], [52.6, 15164.0], [52.7, 15164.0], [52.8, 15164.0], [52.9, 15165.0], [53.0, 15165.0], [53.1, 15165.0], [53.2, 15165.0], [53.3, 15165.0], [53.4, 15165.0], [53.5, 15165.0], [53.6, 15165.0], [53.7, 15165.0], [53.8, 15165.0], [53.9, 15165.0], [54.0, 15165.0], [54.1, 15165.0], [54.2, 15165.0], [54.3, 15165.0], [54.4, 15165.0], [54.5, 15165.0], [54.6, 15165.0], [54.7, 15165.0], [54.8, 15165.0], [54.9, 15165.0], [55.0, 15165.0], [55.1, 15165.0], [55.2, 15166.0], [55.3, 15166.0], [55.4, 15166.0], [55.5, 15166.0], [55.6, 15166.0], [55.7, 15166.0], [55.8, 15166.0], [55.9, 15166.0], [56.0, 15166.0], [56.1, 15166.0], [56.2, 15166.0], [56.3, 15166.0], [56.4, 15166.0], [56.5, 15166.0], [56.6, 15166.0], [56.7, 15166.0], [56.8, 15166.0], [56.9, 15166.0], [57.0, 15166.0], [57.1, 15167.0], [57.2, 15167.0], [57.3, 15167.0], [57.4, 15167.0], [57.5, 15167.0], [57.6, 15167.0], [57.7, 15167.0], [57.8, 15167.0], [57.9, 15167.0], [58.0, 15167.0], [58.1, 15167.0], [58.2, 15167.0], [58.3, 15167.0], [58.4, 15167.0], [58.5, 15167.0], [58.6, 15167.0], [58.7, 15167.0], [58.8, 15167.0], [58.9, 15167.0], [59.0, 15167.0], [59.1, 15167.0], [59.2, 15167.0], [59.3, 15167.0], [59.4, 15167.0], [59.5, 15167.0], [59.6, 15167.0], [59.7, 15167.0], [59.8, 15167.0], [59.9, 15167.0], [60.0, 15167.0], [60.1, 15167.0], [60.2, 15168.0], [60.3, 15168.0], [60.4, 15168.0], [60.5, 15168.0], [60.6, 15168.0], [60.7, 15168.0], [60.8, 15168.0], [60.9, 15168.0], [61.0, 15168.0], [61.1, 15168.0], [61.2, 15168.0], [61.3, 15168.0], [61.4, 15168.0], [61.5, 15168.0], [61.6, 15168.0], [61.7, 15168.0], [61.8, 15168.0], [61.9, 15168.0], [62.0, 15168.0], [62.1, 15168.0], [62.2, 15168.0], [62.3, 15168.0], [62.4, 15168.0], [62.5, 15168.0], [62.6, 15168.0], [62.7, 15168.0], [62.8, 15168.0], [62.9, 15169.0], [63.0, 15169.0], [63.1, 15169.0], [63.2, 15169.0], [63.3, 15169.0], [63.4, 15169.0], [63.5, 15169.0], [63.6, 15169.0], [63.7, 15169.0], [63.8, 15169.0], [63.9, 15169.0], [64.0, 15169.0], [64.1, 15169.0], [64.2, 15169.0], [64.3, 15169.0], [64.4, 15169.0], [64.5, 15169.0], [64.6, 15169.0], [64.7, 15169.0], [64.8, 15169.0], [64.9, 15169.0], [65.0, 15169.0], [65.1, 15169.0], [65.2, 15170.0], [65.3, 15170.0], [65.4, 15170.0], [65.5, 15170.0], [65.6, 15170.0], [65.7, 15170.0], [65.8, 15170.0], [65.9, 15170.0], [66.0, 15170.0], [66.1, 15170.0], [66.2, 15170.0], [66.3, 15170.0], [66.4, 15170.0], [66.5, 15170.0], [66.6, 15170.0], [66.7, 15170.0], [66.8, 15170.0], [66.9, 15170.0], [67.0, 15170.0], [67.1, 15170.0], [67.2, 15170.0], [67.3, 15170.0], [67.4, 15170.0], [67.5, 15170.0], [67.6, 15170.0], [67.7, 15170.0], [67.8, 15170.0], [67.9, 15171.0], [68.0, 15171.0], [68.1, 15171.0], [68.2, 15171.0], [68.3, 15171.0], [68.4, 15171.0], [68.5, 15171.0], [68.6, 15171.0], [68.7, 15171.0], [68.8, 15171.0], [68.9, 15171.0], [69.0, 15171.0], [69.1, 15171.0], [69.2, 15171.0], [69.3, 15171.0], [69.4, 15171.0], [69.5, 15171.0], [69.6, 15171.0], [69.7, 15171.0], [69.8, 15171.0], [69.9, 15171.0], [70.0, 15171.0], [70.1, 15171.0], [70.2, 15171.0], [70.3, 15171.0], [70.4, 15171.0], [70.5, 15171.0], [70.6, 15171.0], [70.7, 15171.0], [70.8, 15171.0], [70.9, 15172.0], [71.0, 15172.0], [71.1, 15172.0], [71.2, 15172.0], [71.3, 15172.0], [71.4, 15172.0], [71.5, 15172.0], [71.6, 15172.0], [71.7, 15172.0], [71.8, 15172.0], [71.9, 15172.0], [72.0, 15172.0], [72.1, 15172.0], [72.2, 15172.0], [72.3, 15172.0], [72.4, 15172.0], [72.5, 15172.0], [72.6, 15172.0], [72.7, 15172.0], [72.8, 15172.0], [72.9, 15172.0], [73.0, 15172.0], [73.1, 15172.0], [73.2, 15172.0], [73.3, 15172.0], [73.4, 15172.0], [73.5, 15172.0], [73.6, 15173.0], [73.7, 15173.0], [73.8, 15173.0], [73.9, 15173.0], [74.0, 15173.0], [74.1, 15173.0], [74.2, 15173.0], [74.3, 15173.0], [74.4, 15173.0], [74.5, 15173.0], [74.6, 15173.0], [74.7, 15173.0], [74.8, 15173.0], [74.9, 15173.0], [75.0, 15173.0], [75.1, 15173.0], [75.2, 15173.0], [75.3, 15173.0], [75.4, 15173.0], [75.5, 15173.0], [75.6, 15173.0], [75.7, 15173.0], [75.8, 15173.0], [75.9, 15173.0], [76.0, 15173.0], [76.1, 15173.0], [76.2, 15173.0], [76.3, 15173.0], [76.4, 15173.0], [76.5, 15173.0], [76.6, 15173.0], [76.7, 15173.0], [76.8, 15173.0], [76.9, 15173.0], [77.0, 15173.0], [77.1, 15174.0], [77.2, 15174.0], [77.3, 15174.0], [77.4, 15174.0], [77.5, 15174.0], [77.6, 15174.0], [77.7, 15174.0], [77.8, 15174.0], [77.9, 15174.0], [78.0, 15174.0], [78.1, 15174.0], [78.2, 15174.0], [78.3, 15174.0], [78.4, 15174.0], [78.5, 15174.0], [78.6, 15174.0], [78.7, 15174.0], [78.8, 15174.0], [78.9, 15174.0], [79.0, 15175.0], [79.1, 15175.0], [79.2, 15175.0], [79.3, 15175.0], [79.4, 15175.0], [79.5, 15175.0], [79.6, 15175.0], [79.7, 15175.0], [79.8, 15175.0], [79.9, 15175.0], [80.0, 15175.0], [80.1, 15175.0], [80.2, 15175.0], [80.3, 15175.0], [80.4, 15175.0], [80.5, 15176.0], [80.6, 15176.0], [80.7, 15176.0], [80.8, 15176.0], [80.9, 15176.0], [81.0, 15176.0], [81.1, 15176.0], [81.2, 15176.0], [81.3, 15176.0], [81.4, 15176.0], [81.5, 15176.0], [81.6, 15176.0], [81.7, 15176.0], [81.8, 15176.0], [81.9, 15176.0], [82.0, 15176.0], [82.1, 15176.0], [82.2, 15176.0], [82.3, 15176.0], [82.4, 15176.0], [82.5, 15176.0], [82.6, 15176.0], [82.7, 15176.0], [82.8, 15176.0], [82.9, 15176.0], [83.0, 15176.0], [83.1, 15176.0], [83.2, 15176.0], [83.3, 15176.0], [83.4, 15176.0], [83.5, 15176.0], [83.6, 15177.0], [83.7, 15177.0], [83.8, 15177.0], [83.9, 15177.0], [84.0, 15177.0], [84.1, 15177.0], [84.2, 15177.0], [84.3, 15177.0], [84.4, 15177.0], [84.5, 15177.0], [84.6, 15177.0], [84.7, 15178.0], [84.8, 15178.0], [84.9, 15178.0], [85.0, 15178.0], [85.1, 15178.0], [85.2, 15178.0], [85.3, 15178.0], [85.4, 15178.0], [85.5, 15178.0], [85.6, 15178.0], [85.7, 15178.0], [85.8, 15178.0], [85.9, 15178.0], [86.0, 15178.0], [86.1, 15178.0], [86.2, 15178.0], [86.3, 15178.0], [86.4, 15178.0], [86.5, 15178.0], [86.6, 15178.0], [86.7, 15178.0], [86.8, 15178.0], [86.9, 15178.0], [87.0, 15178.0], [87.1, 15178.0], [87.2, 15178.0], [87.3, 15178.0], [87.4, 15178.0], [87.5, 15178.0], [87.6, 15178.0], [87.7, 15178.0], [87.8, 15178.0], [87.9, 15178.0], [88.0, 15178.0], [88.1, 15178.0], [88.2, 15178.0], [88.3, 15178.0], [88.4, 15178.0], [88.5, 15178.0], [88.6, 15178.0], [88.7, 15178.0], [88.8, 15178.0], [88.9, 15178.0], [89.0, 15178.0], [89.1, 15178.0], [89.2, 15178.0], [89.3, 15178.0], [89.4, 15178.0], [89.5, 15178.0], [89.6, 15178.0], [89.7, 15179.0], [89.8, 15179.0], [89.9, 15179.0], [90.0, 15179.0], [90.1, 15179.0], [90.2, 15179.0], [90.3, 15179.0], [90.4, 15179.0], [90.5, 15179.0], [90.6, 15179.0], [90.7, 15179.0], [90.8, 15179.0], [90.9, 15180.0], [91.0, 15180.0], [91.1, 15180.0], [91.2, 15180.0], [91.3, 15180.0], [91.4, 15180.0], [91.5, 15180.0], [91.6, 15181.0], [91.7, 15181.0], [91.8, 15181.0], [91.9, 15181.0], [92.0, 15182.0], [92.1, 15182.0], [92.2, 15182.0], [92.3, 15182.0], [92.4, 15182.0], [92.5, 15182.0], [92.6, 15182.0], [92.7, 15182.0], [92.8, 15182.0], [92.9, 15182.0], [93.0, 15182.0], [93.1, 15182.0], [93.2, 15182.0], [93.3, 15182.0], [93.4, 15182.0], [93.5, 15183.0], [93.6, 15183.0], [93.7, 15183.0], [93.8, 15183.0], [93.9, 15183.0], [94.0, 15183.0], [94.1, 15183.0], [94.2, 15183.0], [94.3, 15183.0], [94.4, 15183.0], [94.5, 15183.0], [94.6, 15183.0], [94.7, 15184.0], [94.8, 15184.0], [94.9, 15184.0], [95.0, 15184.0], [95.1, 15184.0], [95.2, 15184.0], [95.3, 15184.0], [95.4, 15184.0], [95.5, 15184.0], [95.6, 15184.0], [95.7, 15184.0], [95.8, 15185.0], [95.9, 15185.0], [96.0, 15185.0], [96.1, 15185.0], [96.2, 15185.0], [96.3, 15185.0], [96.4, 15185.0], [96.5, 15185.0], [96.6, 15186.0], [96.7, 15186.0], [96.8, 15186.0], [96.9, 15186.0], [97.0, 15186.0], [97.1, 15186.0], [97.2, 15186.0], [97.3, 15186.0], [97.4, 15188.0], [97.5, 15188.0], [97.6, 15188.0], [97.7, 15188.0], [97.8, 15189.0], [97.9, 15189.0], [98.0, 15189.0], [98.1, 15190.0], [98.2, 15190.0], [98.3, 15190.0], [98.4, 15190.0], [98.5, 15192.0], [98.6, 15192.0], [98.7, 15192.0], [98.8, 15192.0], [98.9, 15195.0], [99.0, 15195.0], [99.1, 15195.0], [99.2, 15195.0], [99.3, 15196.0], [99.4, 15196.0], [99.5, 15196.0], [99.6, 15196.0], [99.7, 15529.0], [99.8, 15529.0], [99.9, 15529.0], [100.0, 15529.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 120.0], [0.1, 120.0], [0.2, 120.0], [0.3, 120.0], [0.4, 122.0], [0.5, 122.0], [0.6, 122.0], [0.7, 122.0], [0.8, 122.0], [0.9, 122.0], [1.0, 122.0], [1.1, 122.0], [1.2, 127.0], [1.3, 127.0], [1.4, 127.0], [1.5, 127.0], [1.6, 128.0], [1.7, 128.0], [1.8, 128.0], [1.9, 128.0], [2.0, 129.0], [2.1, 129.0], [2.2, 129.0], [2.3, 130.0], [2.4, 130.0], [2.5, 130.0], [2.6, 130.0], [2.7, 130.0], [2.8, 130.0], [2.9, 130.0], [3.0, 130.0], [3.1, 131.0], [3.2, 131.0], [3.3, 131.0], [3.4, 131.0], [3.5, 132.0], [3.6, 132.0], [3.7, 132.0], [3.8, 132.0], [3.9, 136.0], [4.0, 136.0], [4.1, 136.0], [4.2, 136.0], [4.3, 137.0], [4.4, 137.0], [4.5, 137.0], [4.6, 139.0], [4.7, 139.0], [4.8, 139.0], [4.9, 139.0], [5.0, 145.0], [5.1, 145.0], [5.2, 145.0], [5.3, 145.0], [5.4, 211.0], [5.5, 211.0], [5.6, 211.0], [5.7, 211.0], [5.8, 211.0], [5.9, 211.0], [6.0, 211.0], [6.1, 211.0], [6.2, 212.0], [6.3, 212.0], [6.4, 212.0], [6.5, 212.0], [6.6, 212.0], [6.7, 212.0], [6.8, 212.0], [6.9, 218.0], [7.0, 218.0], [7.1, 218.0], [7.2, 218.0], [7.3, 230.0], [7.4, 230.0], [7.5, 230.0], [7.6, 230.0], [7.7, 232.0], [7.8, 232.0], [7.9, 232.0], [8.0, 232.0], [8.1, 320.0], [8.2, 320.0], [8.3, 320.0], [8.4, 320.0], [8.5, 381.0], [8.6, 381.0], [8.7, 381.0], [8.8, 381.0], [8.9, 387.0], [9.0, 387.0], [9.1, 387.0], [9.2, 390.0], [9.3, 390.0], [9.4, 390.0], [9.5, 390.0], [9.6, 392.0], [9.7, 392.0], [9.8, 392.0], [9.9, 392.0], [10.0, 392.0], [10.1, 392.0], [10.2, 392.0], [10.3, 392.0], [10.4, 393.0], [10.5, 393.0], [10.6, 393.0], [10.7, 393.0], [10.8, 395.0], [10.9, 395.0], [11.0, 395.0], [11.1, 395.0], [11.2, 401.0], [11.3, 401.0], [11.4, 401.0], [11.5, 405.0], [11.6, 405.0], [11.7, 405.0], [11.8, 405.0], [11.9, 405.0], [12.0, 405.0], [12.1, 405.0], [12.2, 405.0], [12.3, 406.0], [12.4, 406.0], [12.5, 406.0], [12.6, 406.0], [12.7, 408.0], [12.8, 408.0], [12.9, 408.0], [13.0, 408.0], [13.1, 410.0], [13.2, 410.0], [13.3, 410.0], [13.4, 410.0], [13.5, 411.0], [13.6, 411.0], [13.7, 411.0], [13.8, 414.0], [13.9, 414.0], [14.0, 414.0], [14.1, 414.0], [14.2, 416.0], [14.3, 416.0], [14.4, 416.0], [14.5, 416.0], [14.6, 417.0], [14.7, 417.0], [14.8, 417.0], [14.9, 417.0], [15.0, 439.0], [15.1, 439.0], [15.2, 439.0], [15.3, 439.0], [15.4, 442.0], [15.5, 442.0], [15.6, 442.0], [15.7, 442.0], [15.8, 443.0], [15.9, 443.0], [16.0, 443.0], [16.1, 446.0], [16.2, 446.0], [16.3, 446.0], [16.4, 446.0], [16.5, 787.0], [16.6, 787.0], [16.7, 787.0], [16.8, 787.0], [16.9, 954.0], [17.0, 954.0], [17.1, 954.0], [17.2, 954.0], [17.3, 1125.0], [17.4, 1125.0], [17.5, 1125.0], [17.6, 1125.0], [17.7, 1126.0], [17.8, 1126.0], [17.9, 1126.0], [18.0, 1126.0], [18.1, 1129.0], [18.2, 1129.0], [18.3, 1129.0], [18.4, 1130.0], [18.5, 1130.0], [18.6, 1130.0], [18.7, 1130.0], [18.8, 1130.0], [18.9, 1130.0], [19.0, 1130.0], [19.1, 1130.0], [19.2, 1131.0], [19.3, 1131.0], [19.4, 1131.0], [19.5, 1131.0], [19.6, 1131.0], [19.7, 1131.0], [19.8, 1131.0], [19.9, 1131.0], [20.0, 1132.0], [20.1, 1132.0], [20.2, 1132.0], [20.3, 1132.0], [20.4, 1132.0], [20.5, 1132.0], [20.6, 1132.0], [20.7, 1132.0], [20.8, 1132.0], [20.9, 1132.0], [21.0, 1132.0], [21.1, 1134.0], [21.2, 1134.0], [21.3, 1134.0], [21.4, 1134.0], [21.5, 1137.0], [21.6, 1137.0], [21.7, 1137.0], [21.8, 1137.0], [21.9, 1137.0], [22.0, 1137.0], [22.1, 1137.0], [22.2, 1137.0], [22.3, 1138.0], [22.4, 1138.0], [22.5, 1138.0], [22.6, 1138.0], [22.7, 1139.0], [22.8, 1139.0], [22.9, 1139.0], [23.0, 1140.0], [23.1, 1140.0], [23.2, 1140.0], [23.3, 1140.0], [23.4, 1141.0], [23.5, 1141.0], [23.6, 1141.0], [23.7, 1141.0], [23.8, 1141.0], [23.9, 1141.0], [24.0, 1141.0], [24.1, 1141.0], [24.2, 1143.0], [24.3, 1143.0], [24.4, 1143.0], [24.5, 1143.0], [24.6, 1149.0], [24.7, 1149.0], [24.8, 1149.0], [24.9, 1149.0], [25.0, 1394.0], [25.1, 1394.0], [25.2, 1394.0], [25.3, 1397.0], [25.4, 1397.0], [25.5, 1397.0], [25.6, 1397.0], [25.7, 1404.0], [25.8, 1404.0], [25.9, 1404.0], [26.0, 1404.0], [26.1, 1406.0], [26.2, 1406.0], [26.3, 1406.0], [26.4, 1406.0], [26.5, 1406.0], [26.6, 1406.0], [26.7, 1406.0], [26.8, 1406.0], [26.9, 1408.0], [27.0, 1408.0], [27.1, 1408.0], [27.2, 1408.0], [27.3, 1411.0], [27.4, 1411.0], [27.5, 1411.0], [27.6, 1417.0], [27.7, 1417.0], [27.8, 1417.0], [27.9, 1417.0], [28.0, 1418.0], [28.1, 1418.0], [28.2, 1418.0], [28.3, 1418.0], [28.4, 1425.0], [28.5, 1425.0], [28.6, 1425.0], [28.7, 1425.0], [28.8, 1529.0], [28.9, 1529.0], [29.0, 1529.0], [29.1, 1529.0], [29.2, 1764.0], [29.3, 1764.0], [29.4, 1764.0], [29.5, 1764.0], [29.6, 1787.0], [29.7, 1787.0], [29.8, 1787.0], [29.9, 1879.0], [30.0, 1879.0], [30.1, 1879.0], [30.2, 1879.0], [30.3, 1958.0], [30.4, 1958.0], [30.5, 1958.0], [30.6, 1958.0], [30.7, 1991.0], [30.8, 1991.0], [30.9, 1991.0], [31.0, 1991.0], [31.1, 2619.0], [31.2, 2619.0], [31.3, 2619.0], [31.4, 2619.0], [31.5, 2694.0], [31.6, 2694.0], [31.7, 2694.0], [31.8, 2694.0], [31.9, 2739.0], [32.0, 2739.0], [32.1, 2739.0], [32.2, 2750.0], [32.3, 2750.0], [32.4, 2750.0], [32.5, 2750.0], [32.6, 2784.0], [32.7, 2784.0], [32.8, 2784.0], [32.9, 2784.0], [33.0, 2816.0], [33.1, 2816.0], [33.2, 2816.0], [33.3, 2816.0], [33.4, 2843.0], [33.5, 2843.0], [33.6, 2843.0], [33.7, 2843.0], [33.8, 2858.0], [33.9, 2858.0], [34.0, 2858.0], [34.1, 2879.0], [34.2, 2879.0], [34.3, 2879.0], [34.4, 2879.0], [34.5, 2955.0], [34.6, 2955.0], [34.7, 2955.0], [34.8, 2955.0], [34.9, 2958.0], [35.0, 2958.0], [35.1, 2958.0], [35.2, 2958.0], [35.3, 3002.0], [35.4, 3002.0], [35.5, 3002.0], [35.6, 3002.0], [35.7, 3029.0], [35.8, 3029.0], [35.9, 3029.0], [36.0, 3029.0], [36.1, 3046.0], [36.2, 3046.0], [36.3, 3046.0], [36.4, 3050.0], [36.5, 3050.0], [36.6, 3050.0], [36.7, 3050.0], [36.8, 3075.0], [36.9, 3075.0], [37.0, 3075.0], [37.1, 3075.0], [37.2, 3084.0], [37.3, 3084.0], [37.4, 3084.0], [37.5, 3084.0], [37.6, 3132.0], [37.7, 3132.0], [37.8, 3132.0], [37.9, 3132.0], [38.0, 3136.0], [38.1, 3136.0], [38.2, 3136.0], [38.3, 3136.0], [38.4, 3136.0], [38.5, 3136.0], [38.6, 3136.0], [38.7, 3139.0], [38.8, 3139.0], [38.9, 3139.0], [39.0, 3139.0], [39.1, 3140.0], [39.2, 3140.0], [39.3, 3140.0], [39.4, 3140.0], [39.5, 3140.0], [39.6, 3140.0], [39.7, 3140.0], [39.8, 3140.0], [39.9, 3140.0], [40.0, 3140.0], [40.1, 3140.0], [40.2, 3140.0], [40.3, 3141.0], [40.4, 3141.0], [40.5, 3141.0], [40.6, 3141.0], [40.7, 3141.0], [40.8, 3141.0], [40.9, 3141.0], [41.0, 3142.0], [41.1, 3142.0], [41.2, 3142.0], [41.3, 3142.0], [41.4, 3143.0], [41.5, 3143.0], [41.6, 3143.0], [41.7, 3143.0], [41.8, 3144.0], [41.9, 3144.0], [42.0, 3144.0], [42.1, 3144.0], [42.2, 3145.0], [42.3, 3145.0], [42.4, 3145.0], [42.5, 3145.0], [42.6, 3145.0], [42.7, 3145.0], [42.8, 3145.0], [42.9, 3145.0], [43.0, 3145.0], [43.1, 3145.0], [43.2, 3145.0], [43.3, 3146.0], [43.4, 3146.0], [43.5, 3146.0], [43.6, 3146.0], [43.7, 3146.0], [43.8, 3146.0], [43.9, 3146.0], [44.0, 3146.0], [44.1, 3146.0], [44.2, 3146.0], [44.3, 3146.0], [44.4, 3146.0], [44.5, 3146.0], [44.6, 3146.0], [44.7, 3146.0], [44.8, 3146.0], [44.9, 3147.0], [45.0, 3147.0], [45.1, 3147.0], [45.2, 3147.0], [45.3, 3147.0], [45.4, 3147.0], [45.5, 3147.0], [45.6, 3147.0], [45.7, 3147.0], [45.8, 3147.0], [45.9, 3147.0], [46.0, 3148.0], [46.1, 3148.0], [46.2, 3148.0], [46.3, 3148.0], [46.4, 3148.0], [46.5, 3148.0], [46.6, 3148.0], [46.7, 3148.0], [46.8, 3148.0], [46.9, 3148.0], [47.0, 3148.0], [47.1, 3148.0], [47.2, 3150.0], [47.3, 3150.0], [47.4, 3150.0], [47.5, 3150.0], [47.6, 3150.0], [47.7, 3150.0], [47.8, 3150.0], [47.9, 3150.0], [48.0, 3150.0], [48.1, 3150.0], [48.2, 3150.0], [48.3, 3150.0], [48.4, 3150.0], [48.5, 3150.0], [48.6, 3150.0], [48.7, 3150.0], [48.8, 3150.0], [48.9, 3150.0], [49.0, 3150.0], [49.1, 3151.0], [49.2, 3151.0], [49.3, 3151.0], [49.4, 3151.0], [49.5, 3151.0], [49.6, 3151.0], [49.7, 3151.0], [49.8, 3151.0], [49.9, 3152.0], [50.0, 3152.0], [50.1, 3152.0], [50.2, 3152.0], [50.3, 3152.0], [50.4, 3152.0], [50.5, 3152.0], [50.6, 3153.0], [50.7, 3153.0], [50.8, 3153.0], [50.9, 3153.0], [51.0, 3153.0], [51.1, 3153.0], [51.2, 3153.0], [51.3, 3153.0], [51.4, 3154.0], [51.5, 3154.0], [51.6, 3154.0], [51.7, 3154.0], [51.8, 3155.0], [51.9, 3155.0], [52.0, 3155.0], [52.1, 3155.0], [52.2, 3155.0], [52.3, 3155.0], [52.4, 3155.0], [52.5, 3155.0], [52.6, 3155.0], [52.7, 3155.0], [52.8, 3155.0], [52.9, 3156.0], [53.0, 3156.0], [53.1, 3156.0], [53.2, 3156.0], [53.3, 3156.0], [53.4, 3156.0], [53.5, 3156.0], [53.6, 3156.0], [53.7, 3156.0], [53.8, 3156.0], [53.9, 3156.0], [54.0, 3156.0], [54.1, 3156.0], [54.2, 3156.0], [54.3, 3156.0], [54.4, 3156.0], [54.5, 3157.0], [54.6, 3157.0], [54.7, 3157.0], [54.8, 3158.0], [54.9, 3158.0], [55.0, 3158.0], [55.1, 3158.0], [55.2, 3158.0], [55.3, 3158.0], [55.4, 3158.0], [55.5, 3158.0], [55.6, 3159.0], [55.7, 3159.0], [55.8, 3159.0], [55.9, 3159.0], [56.0, 3160.0], [56.1, 3160.0], [56.2, 3160.0], [56.3, 3160.0], [56.4, 3160.0], [56.5, 3160.0], [56.6, 3160.0], [56.7, 3160.0], [56.8, 3160.0], [56.9, 3160.0], [57.0, 3160.0], [57.1, 3161.0], [57.2, 3161.0], [57.3, 3161.0], [57.4, 3161.0], [57.5, 3163.0], [57.6, 3163.0], [57.7, 3163.0], [57.8, 3163.0], [57.9, 3167.0], [58.0, 3167.0], [58.1, 3167.0], [58.2, 3167.0], [58.3, 3170.0], [58.4, 3170.0], [58.5, 3170.0], [58.6, 3170.0], [58.7, 3171.0], [58.8, 3171.0], [58.9, 3171.0], [59.0, 3171.0], [59.1, 3182.0], [59.2, 3182.0], [59.3, 3182.0], [59.4, 3403.0], [59.5, 3403.0], [59.6, 3403.0], [59.7, 3403.0], [59.8, 3404.0], [59.9, 3404.0], [60.0, 3404.0], [60.1, 3404.0], [60.2, 3405.0], [60.3, 3405.0], [60.4, 3405.0], [60.5, 3405.0], [60.6, 3406.0], [60.7, 3406.0], [60.8, 3406.0], [60.9, 3406.0], [61.0, 3407.0], [61.1, 3407.0], [61.2, 3407.0], [61.3, 3407.0], [61.4, 3407.0], [61.5, 3407.0], [61.6, 3407.0], [61.7, 3408.0], [61.8, 3408.0], [61.9, 3408.0], [62.0, 3408.0], [62.1, 3408.0], [62.2, 3408.0], [62.3, 3408.0], [62.4, 3408.0], [62.5, 3408.0], [62.6, 3408.0], [62.7, 3408.0], [62.8, 3408.0], [62.9, 3409.0], [63.0, 3409.0], [63.1, 3409.0], [63.2, 3409.0], [63.3, 3410.0], [63.4, 3410.0], [63.5, 3410.0], [63.6, 3410.0], [63.7, 3413.0], [63.8, 3413.0], [63.9, 3413.0], [64.0, 3413.0], [64.1, 3413.0], [64.2, 3413.0], [64.3, 3413.0], [64.4, 3413.0], [64.5, 3413.0], [64.6, 3413.0], [64.7, 3413.0], [64.8, 3413.0], [64.9, 3413.0], [65.0, 3413.0], [65.1, 3413.0], [65.2, 3413.0], [65.3, 3413.0], [65.4, 3413.0], [65.5, 3413.0], [65.6, 3414.0], [65.7, 3414.0], [65.8, 3414.0], [65.9, 3414.0], [66.0, 3414.0], [66.1, 3414.0], [66.2, 3414.0], [66.3, 3415.0], [66.4, 3415.0], [66.5, 3415.0], [66.6, 3415.0], [66.7, 3415.0], [66.8, 3415.0], [66.9, 3415.0], [67.0, 3415.0], [67.1, 3416.0], [67.2, 3416.0], [67.3, 3416.0], [67.4, 3416.0], [67.5, 3416.0], [67.6, 3416.0], [67.7, 3416.0], [67.8, 3416.0], [67.9, 3418.0], [68.0, 3418.0], [68.1, 3418.0], [68.2, 3422.0], [68.3, 3422.0], [68.4, 3422.0], [68.5, 3422.0], [68.6, 3423.0], [68.7, 3423.0], [68.8, 3423.0], [68.9, 3423.0], [69.0, 3423.0], [69.1, 3423.0], [69.2, 3423.0], [69.3, 3423.0], [69.4, 3426.0], [69.5, 3426.0], [69.6, 3426.0], [69.7, 3426.0], [69.8, 3427.0], [69.9, 3427.0], [70.0, 3427.0], [70.1, 3427.0], [70.2, 4084.0], [70.3, 4084.0], [70.4, 4084.0], [70.5, 4111.0], [70.6, 4111.0], [70.7, 4111.0], [70.8, 4111.0], [70.9, 4111.0], [71.0, 4111.0], [71.1, 4111.0], [71.2, 4111.0], [71.3, 4141.0], [71.4, 4141.0], [71.5, 4141.0], [71.6, 4141.0], [71.7, 4149.0], [71.8, 4149.0], [71.9, 4149.0], [72.0, 4149.0], [72.1, 4150.0], [72.2, 4150.0], [72.3, 4150.0], [72.4, 4150.0], [72.5, 4151.0], [72.6, 4151.0], [72.7, 4151.0], [72.8, 4174.0], [72.9, 4174.0], [73.0, 4174.0], [73.1, 4174.0], [73.2, 4265.0], [73.3, 4265.0], [73.4, 4265.0], [73.5, 4265.0], [73.6, 4292.0], [73.7, 4292.0], [73.8, 4292.0], [73.9, 4292.0], [74.0, 4351.0], [74.1, 4351.0], [74.2, 4351.0], [74.3, 4351.0], [74.4, 4383.0], [74.5, 4383.0], [74.6, 4383.0], [74.7, 4383.0], [74.8, 4799.0], [74.9, 4799.0], [75.0, 4799.0], [75.1, 4864.0], [75.2, 4864.0], [75.3, 4864.0], [75.4, 4864.0], [75.5, 4877.0], [75.6, 4877.0], [75.7, 4877.0], [75.8, 4877.0], [75.9, 4918.0], [76.0, 4918.0], [76.1, 4918.0], [76.2, 4918.0], [76.3, 4918.0], [76.4, 4918.0], [76.5, 4918.0], [76.6, 4918.0], [76.7, 4929.0], [76.8, 4929.0], [76.9, 4929.0], [77.0, 4929.0], [77.1, 4953.0], [77.2, 4953.0], [77.3, 4953.0], [77.4, 4959.0], [77.5, 4959.0], [77.6, 4959.0], [77.7, 4959.0], [77.8, 4974.0], [77.9, 4974.0], [78.0, 4974.0], [78.1, 4974.0], [78.2, 4981.0], [78.3, 4981.0], [78.4, 4981.0], [78.5, 4981.0], [78.6, 4997.0], [78.7, 4997.0], [78.8, 4997.0], [78.9, 4997.0], [79.0, 5010.0], [79.1, 5010.0], [79.2, 5010.0], [79.3, 5010.0], [79.4, 5012.0], [79.5, 5012.0], [79.6, 5012.0], [79.7, 5035.0], [79.8, 5035.0], [79.9, 5035.0], [80.0, 5035.0], [80.1, 5047.0], [80.2, 5047.0], [80.3, 5047.0], [80.4, 5047.0], [80.5, 5087.0], [80.6, 5087.0], [80.7, 5087.0], [80.8, 5087.0], [80.9, 5099.0], [81.0, 5099.0], [81.1, 5099.0], [81.2, 5099.0], [81.3, 5118.0], [81.4, 5118.0], [81.5, 5118.0], [81.6, 5118.0], [81.7, 5150.0], [81.8, 5150.0], [81.9, 5150.0], [82.0, 5185.0], [82.1, 5185.0], [82.2, 5185.0], [82.3, 5185.0], [82.4, 5192.0], [82.5, 5192.0], [82.6, 5192.0], [82.7, 5192.0], [82.8, 5199.0], [82.9, 5199.0], [83.0, 5199.0], [83.1, 5199.0], [83.2, 5200.0], [83.3, 5200.0], [83.4, 5200.0], [83.5, 5200.0], [83.6, 5205.0], [83.7, 5205.0], [83.8, 5205.0], [83.9, 5205.0], [84.0, 5206.0], [84.1, 5206.0], [84.2, 5206.0], [84.3, 5230.0], [84.4, 5230.0], [84.5, 5230.0], [84.6, 5230.0], [84.7, 5239.0], [84.8, 5239.0], [84.9, 5239.0], [85.0, 5239.0], [85.1, 5241.0], [85.2, 5241.0], [85.3, 5241.0], [85.4, 5241.0], [85.5, 5242.0], [85.6, 5242.0], [85.7, 5242.0], [85.8, 5242.0], [85.9, 5243.0], [86.0, 5243.0], [86.1, 5243.0], [86.2, 5243.0], [86.3, 5466.0], [86.4, 5466.0], [86.5, 5466.0], [86.6, 5470.0], [86.7, 5470.0], [86.8, 5470.0], [86.9, 5470.0], [87.0, 5537.0], [87.1, 5537.0], [87.2, 5537.0], [87.3, 5537.0], [87.4, 5551.0], [87.5, 5551.0], [87.6, 5551.0], [87.7, 5551.0], [87.8, 5566.0], [87.9, 5566.0], [88.0, 5566.0], [88.1, 5566.0], [88.2, 5567.0], [88.3, 5567.0], [88.4, 5567.0], [88.5, 5567.0], [88.6, 5614.0], [88.7, 5614.0], [88.8, 5614.0], [88.9, 5637.0], [89.0, 5637.0], [89.1, 5637.0], [89.2, 5637.0], [89.3, 5677.0], [89.4, 5677.0], [89.5, 5677.0], [89.6, 5677.0], [89.7, 5718.0], [89.8, 5718.0], [89.9, 5718.0], [90.0, 5718.0], [90.1, 5740.0], [90.2, 5740.0], [90.3, 5740.0], [90.4, 5740.0], [90.5, 5829.0], [90.6, 5829.0], [90.7, 5829.0], [90.8, 5829.0], [90.9, 5834.0], [91.0, 5834.0], [91.1, 5834.0], [91.2, 5837.0], [91.3, 5837.0], [91.4, 5837.0], [91.5, 5837.0], [91.6, 5847.0], [91.7, 5847.0], [91.8, 5847.0], [91.9, 5847.0], [92.0, 5867.0], [92.1, 5867.0], [92.2, 5867.0], [92.3, 5867.0], [92.4, 5927.0], [92.5, 5927.0], [92.6, 5927.0], [92.7, 5927.0], [92.8, 5938.0], [92.9, 5938.0], [93.0, 5938.0], [93.1, 5938.0], [93.2, 5947.0], [93.3, 5947.0], [93.4, 5947.0], [93.5, 5953.0], [93.6, 5953.0], [93.7, 5953.0], [93.8, 5953.0], [93.9, 5960.0], [94.0, 5960.0], [94.1, 5960.0], [94.2, 5960.0], [94.3, 5969.0], [94.4, 5969.0], [94.5, 5969.0], [94.6, 5969.0], [94.7, 5973.0], [94.8, 5973.0], [94.9, 5973.0], [95.0, 5973.0], [95.1, 5974.0], [95.2, 5974.0], [95.3, 5974.0], [95.4, 5974.0], [95.5, 6008.0], [95.6, 6008.0], [95.7, 6008.0], [95.8, 6022.0], [95.9, 6022.0], [96.0, 6022.0], [96.1, 6022.0], [96.2, 6024.0], [96.3, 6024.0], [96.4, 6024.0], [96.5, 6024.0], [96.6, 6034.0], [96.7, 6034.0], [96.8, 6034.0], [96.9, 6034.0], [97.0, 6046.0], [97.1, 6046.0], [97.2, 6046.0], [97.3, 6046.0], [97.4, 6050.0], [97.5, 6050.0], [97.6, 6050.0], [97.7, 6050.0], [97.8, 6065.0], [97.9, 6065.0], [98.0, 6065.0], [98.1, 6432.0], [98.2, 6432.0], [98.3, 6432.0], [98.4, 6432.0], [98.5, 6691.0], [98.6, 6691.0], [98.7, 6691.0], [98.8, 6691.0], [98.9, 6694.0], [99.0, 6694.0], [99.1, 6694.0], [99.2, 6694.0], [99.3, 6698.0], [99.4, 6698.0], [99.5, 6698.0], [99.6, 6698.0], [99.7, 6704.0], [99.8, 6704.0], [99.9, 6704.0], [100.0, 6704.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 1114.0], [0.1, 1166.0], [0.2, 3957.0], [0.3, 3957.0], [0.4, 4324.0], [0.5, 5082.0], [0.6, 5086.0], [0.7, 5095.0], [0.8, 5101.0], [0.9, 5126.0], [1.0, 5133.0], [1.1, 5144.0], [1.2, 5146.0], [1.3, 5148.0], [1.4, 5148.0], [1.5, 5150.0], [1.6, 5157.0], [1.7, 5160.0], [1.8, 5160.0], [1.9, 5163.0], [2.0, 5163.0], [2.1, 5168.0], [2.2, 5181.0], [2.3, 5189.0], [2.4, 5191.0], [2.5, 5191.0], [2.6, 5192.0], [2.7, 5196.0], [2.8, 5201.0], [2.9, 5210.0], [3.0, 5211.0], [3.1, 5221.0], [3.2, 5221.0], [3.3, 5221.0], [3.4, 5221.0], [3.5, 5223.0], [3.6, 5228.0], [3.7, 5229.0], [3.8, 5229.0], [3.9, 5231.0], [4.0, 5232.0], [4.1, 5233.0], [4.2, 5233.0], [4.3, 5233.0], [4.4, 5233.0], [4.5, 5233.0], [4.6, 5234.0], [4.7, 5235.0], [4.8, 5235.0], [4.9, 5236.0], [5.0, 5236.0], [5.1, 5237.0], [5.2, 5237.0], [5.3, 5237.0], [5.4, 5239.0], [5.5, 5239.0], [5.6, 5239.0], [5.7, 5239.0], [5.8, 5239.0], [5.9, 5240.0], [6.0, 5240.0], [6.1, 5240.0], [6.2, 5241.0], [6.3, 5241.0], [6.4, 5241.0], [6.5, 5241.0], [6.6, 5242.0], [6.7, 5242.0], [6.8, 5243.0], [6.9, 5243.0], [7.0, 5243.0], [7.1, 5244.0], [7.2, 5244.0], [7.3, 5244.0], [7.4, 5244.0], [7.5, 5245.0], [7.6, 5245.0], [7.7, 5245.0], [7.8, 5245.0], [7.9, 5246.0], [8.0, 5246.0], [8.1, 5246.0], [8.2, 5246.0], [8.3, 5246.0], [8.4, 5247.0], [8.5, 5247.0], [8.6, 5247.0], [8.7, 5247.0], [8.8, 5247.0], [8.9, 5247.0], [9.0, 5247.0], [9.1, 5247.0], [9.2, 5248.0], [9.3, 5248.0], [9.4, 5248.0], [9.5, 5248.0], [9.6, 5248.0], [9.7, 5248.0], [9.8, 5248.0], [9.9, 5249.0], [10.0, 5249.0], [10.1, 5249.0], [10.2, 5249.0], [10.3, 5249.0], [10.4, 5249.0], [10.5, 5249.0], [10.6, 5249.0], [10.7, 5249.0], [10.8, 5249.0], [10.9, 5251.0], [11.0, 5251.0], [11.1, 5251.0], [11.2, 5251.0], [11.3, 5251.0], [11.4, 5252.0], [11.5, 5252.0], [11.6, 5252.0], [11.7, 5252.0], [11.8, 5253.0], [11.9, 5253.0], [12.0, 5253.0], [12.1, 5253.0], [12.2, 5253.0], [12.3, 5254.0], [12.4, 5254.0], [12.5, 5254.0], [12.6, 5255.0], [12.7, 5255.0], [12.8, 5255.0], [12.9, 5255.0], [13.0, 5255.0], [13.1, 5255.0], [13.2, 5256.0], [13.3, 5256.0], [13.4, 5256.0], [13.5, 5257.0], [13.6, 5257.0], [13.7, 5257.0], [13.8, 5257.0], [13.9, 5258.0], [14.0, 5258.0], [14.1, 5258.0], [14.2, 5258.0], [14.3, 5259.0], [14.4, 5261.0], [14.5, 5262.0], [14.6, 5262.0], [14.7, 5264.0], [14.8, 5265.0], [14.9, 5265.0], [15.0, 5266.0], [15.1, 5266.0], [15.2, 5267.0], [15.3, 5269.0], [15.4, 5273.0], [15.5, 5279.0], [15.6, 5279.0], [15.7, 5281.0], [15.8, 5289.0], [15.9, 5309.0], [16.0, 5326.0], [16.1, 5334.0], [16.2, 5343.0], [16.3, 5391.0], [16.4, 5391.0], [16.5, 5392.0], [16.6, 5412.0], [16.7, 5417.0], [16.8, 5418.0], [16.9, 5421.0], [17.0, 5425.0], [17.1, 5435.0], [17.2, 5437.0], [17.3, 5443.0], [17.4, 5444.0], [17.5, 5448.0], [17.6, 5449.0], [17.7, 5460.0], [17.8, 5462.0], [17.9, 5467.0], [18.0, 5471.0], [18.1, 5473.0], [18.2, 5474.0], [18.3, 5477.0], [18.4, 5481.0], [18.5, 5483.0], [18.6, 5487.0], [18.7, 5489.0], [18.8, 5489.0], [18.9, 5490.0], [19.0, 5495.0], [19.1, 5497.0], [19.2, 5499.0], [19.3, 5499.0], [19.4, 5500.0], [19.5, 5500.0], [19.6, 5501.0], [19.7, 5502.0], [19.8, 5502.0], [19.9, 5506.0], [20.0, 5508.0], [20.1, 5508.0], [20.2, 5510.0], [20.3, 5510.0], [20.4, 5511.0], [20.5, 5511.0], [20.6, 5511.0], [20.7, 5512.0], [20.8, 5513.0], [20.9, 5513.0], [21.0, 5514.0], [21.1, 5516.0], [21.2, 5516.0], [21.3, 5517.0], [21.4, 5518.0], [21.5, 5519.0], [21.6, 5520.0], [21.7, 5520.0], [21.8, 5521.0], [21.9, 5522.0], [22.0, 5522.0], [22.1, 5523.0], [22.2, 5523.0], [22.3, 5524.0], [22.4, 5524.0], [22.5, 5525.0], [22.6, 5526.0], [22.7, 5526.0], [22.8, 5526.0], [22.9, 5526.0], [23.0, 5527.0], [23.1, 5527.0], [23.2, 5527.0], [23.3, 5527.0], [23.4, 5527.0], [23.5, 5528.0], [23.6, 5528.0], [23.7, 5529.0], [23.8, 5529.0], [23.9, 5530.0], [24.0, 5531.0], [24.1, 5531.0], [24.2, 5532.0], [24.3, 5533.0], [24.4, 5533.0], [24.5, 5533.0], [24.6, 5533.0], [24.7, 5534.0], [24.8, 5534.0], [24.9, 5534.0], [25.0, 5535.0], [25.1, 5535.0], [25.2, 5536.0], [25.3, 5536.0], [25.4, 5536.0], [25.5, 5536.0], [25.6, 5537.0], [25.7, 5537.0], [25.8, 5538.0], [25.9, 5538.0], [26.0, 5539.0], [26.1, 5539.0], [26.2, 5540.0], [26.3, 5541.0], [26.4, 5541.0], [26.5, 5541.0], [26.6, 5541.0], [26.7, 5541.0], [26.8, 5541.0], [26.9, 5543.0], [27.0, 5543.0], [27.1, 5545.0], [27.2, 5545.0], [27.3, 5546.0], [27.4, 5547.0], [27.5, 5548.0], [27.6, 5548.0], [27.7, 5549.0], [27.8, 5550.0], [27.9, 5550.0], [28.0, 5550.0], [28.1, 5550.0], [28.2, 5551.0], [28.3, 5552.0], [28.4, 5553.0], [28.5, 5556.0], [28.6, 5559.0], [28.7, 5562.0], [28.8, 5576.0], [28.9, 5593.0], [29.0, 5594.0], [29.1, 5597.0], [29.2, 5598.0], [29.3, 5600.0], [29.4, 5618.0], [29.5, 5621.0], [29.6, 5628.0], [29.7, 5635.0], [29.8, 5635.0], [29.9, 5638.0], [30.0, 5639.0], [30.1, 5639.0], [30.2, 5640.0], [30.3, 5640.0], [30.4, 5642.0], [30.5, 5642.0], [30.6, 5643.0], [30.7, 5643.0], [30.8, 5644.0], [30.9, 5644.0], [31.0, 5645.0], [31.1, 5646.0], [31.2, 5646.0], [31.3, 5646.0], [31.4, 5647.0], [31.5, 5648.0], [31.6, 5649.0], [31.7, 5650.0], [31.8, 5651.0], [31.9, 5652.0], [32.0, 5653.0], [32.1, 5653.0], [32.2, 5653.0], [32.3, 5654.0], [32.4, 5654.0], [32.5, 5654.0], [32.6, 5656.0], [32.7, 5658.0], [32.8, 5659.0], [32.9, 5659.0], [33.0, 5660.0], [33.1, 5660.0], [33.2, 5660.0], [33.3, 5662.0], [33.4, 5663.0], [33.5, 5667.0], [33.6, 5669.0], [33.7, 5669.0], [33.8, 5672.0], [33.9, 5691.0], [34.0, 5707.0], [34.1, 5716.0], [34.2, 5720.0], [34.3, 5723.0], [34.4, 5726.0], [34.5, 5727.0], [34.6, 5727.0], [34.7, 5731.0], [34.8, 5733.0], [34.9, 5734.0], [35.0, 5743.0], [35.1, 5746.0], [35.2, 5749.0], [35.3, 5754.0], [35.4, 5754.0], [35.5, 5757.0], [35.6, 5762.0], [35.7, 5770.0], [35.8, 5770.0], [35.9, 5771.0], [36.0, 5772.0], [36.1, 5772.0], [36.2, 5773.0], [36.3, 5773.0], [36.4, 5786.0], [36.5, 5789.0], [36.6, 5804.0], [36.7, 5829.0], [36.8, 5890.0], [36.9, 5917.0], [37.0, 5929.0], [37.1, 5944.0], [37.2, 5978.0], [37.3, 5981.0], [37.4, 5983.0], [37.5, 5992.0], [37.6, 6001.0], [37.7, 6001.0], [37.8, 6001.0], [37.9, 6005.0], [38.0, 6009.0], [38.1, 6009.0], [38.2, 6011.0], [38.3, 6012.0], [38.4, 6014.0], [38.5, 6015.0], [38.6, 6016.0], [38.7, 6016.0], [38.8, 6017.0], [38.9, 6018.0], [39.0, 6021.0], [39.1, 6022.0], [39.2, 6022.0], [39.3, 6022.0], [39.4, 6022.0], [39.5, 6023.0], [39.6, 6024.0], [39.7, 6024.0], [39.8, 6024.0], [39.9, 6026.0], [40.0, 6026.0], [40.1, 6026.0], [40.2, 6027.0], [40.3, 6027.0], [40.4, 6027.0], [40.5, 6028.0], [40.6, 6028.0], [40.7, 6028.0], [40.8, 6028.0], [40.9, 6028.0], [41.0, 6029.0], [41.1, 6029.0], [41.2, 6029.0], [41.3, 6031.0], [41.4, 6032.0], [41.5, 6032.0], [41.6, 6032.0], [41.7, 6032.0], [41.8, 6032.0], [41.9, 6032.0], [42.0, 6033.0], [42.1, 6033.0], [42.2, 6034.0], [42.3, 6035.0], [42.4, 6035.0], [42.5, 6035.0], [42.6, 6035.0], [42.7, 6035.0], [42.8, 6036.0], [42.9, 6037.0], [43.0, 6037.0], [43.1, 6037.0], [43.2, 6038.0], [43.3, 6040.0], [43.4, 6040.0], [43.5, 6041.0], [43.6, 6041.0], [43.7, 6042.0], [43.8, 6042.0], [43.9, 6042.0], [44.0, 6044.0], [44.1, 6045.0], [44.2, 6045.0], [44.3, 6046.0], [44.4, 6047.0], [44.5, 6047.0], [44.6, 6053.0], [44.7, 6057.0], [44.8, 6064.0], [44.9, 6066.0], [45.0, 6072.0], [45.1, 6077.0], [45.2, 6080.0], [45.3, 6090.0], [45.4, 6093.0], [45.5, 6161.0], [45.6, 6177.0], [45.7, 6196.0], [45.8, 6197.0], [45.9, 6203.0], [46.0, 6209.0], [46.1, 6209.0], [46.2, 6214.0], [46.3, 6215.0], [46.4, 6220.0], [46.5, 6224.0], [46.6, 6231.0], [46.7, 6233.0], [46.8, 6248.0], [46.9, 6288.0], [47.0, 6296.0], [47.1, 6322.0], [47.2, 6326.0], [47.3, 6331.0], [47.4, 6332.0], [47.5, 6332.0], [47.6, 6334.0], [47.7, 6335.0], [47.8, 6336.0], [47.9, 6337.0], [48.0, 6337.0], [48.1, 6337.0], [48.2, 6339.0], [48.3, 6346.0], [48.4, 6348.0], [48.5, 6350.0], [48.6, 6366.0], [48.7, 6370.0], [48.8, 6372.0], [48.9, 6374.0], [49.0, 6375.0], [49.1, 6429.0], [49.2, 6444.0], [49.3, 6448.0], [49.4, 6454.0], [49.5, 6469.0], [49.6, 6481.0], [49.7, 6481.0], [49.8, 6483.0], [49.9, 6483.0], [50.0, 6488.0], [50.1, 6497.0], [50.2, 6501.0], [50.3, 6504.0], [50.4, 6505.0], [50.5, 6514.0], [50.6, 6539.0], [50.7, 6551.0], [50.8, 6552.0], [50.9, 6555.0], [51.0, 6560.0], [51.1, 6567.0], [51.2, 6574.0], [51.3, 6584.0], [51.4, 6592.0], [51.5, 6601.0], [51.6, 6607.0], [51.7, 6610.0], [51.8, 6653.0], [51.9, 6661.0], [52.0, 6776.0], [52.1, 6838.0], [52.2, 7089.0], [52.3, 7090.0], [52.4, 7091.0], [52.5, 7092.0], [52.6, 7092.0], [52.7, 7094.0], [52.8, 7094.0], [52.9, 7094.0], [53.0, 7094.0], [53.1, 7095.0], [53.2, 7095.0], [53.3, 7095.0], [53.4, 7096.0], [53.5, 7097.0], [53.6, 7097.0], [53.7, 7097.0], [53.8, 7097.0], [53.9, 7097.0], [54.0, 7098.0], [54.1, 7098.0], [54.2, 7099.0], [54.3, 7100.0], [54.4, 7100.0], [54.5, 7100.0], [54.6, 7101.0], [54.7, 7101.0], [54.8, 7101.0], [54.9, 7101.0], [55.0, 7101.0], [55.1, 7101.0], [55.2, 7101.0], [55.3, 7102.0], [55.4, 7102.0], [55.5, 7102.0], [55.6, 7102.0], [55.7, 7102.0], [55.8, 7102.0], [55.9, 7103.0], [56.0, 7103.0], [56.1, 7103.0], [56.2, 7103.0], [56.3, 7103.0], [56.4, 7103.0], [56.5, 7104.0], [56.6, 7104.0], [56.7, 7105.0], [56.8, 7105.0], [56.9, 7105.0], [57.0, 7105.0], [57.1, 7106.0], [57.2, 7106.0], [57.3, 7107.0], [57.4, 7107.0], [57.5, 7107.0], [57.6, 7108.0], [57.7, 7108.0], [57.8, 7109.0], [57.9, 7109.0], [58.0, 7109.0], [58.1, 7109.0], [58.2, 7112.0], [58.3, 7113.0], [58.4, 7113.0], [58.5, 7115.0], [58.6, 7115.0], [58.7, 7117.0], [58.8, 7117.0], [58.9, 7118.0], [59.0, 7119.0], [59.1, 7121.0], [59.2, 7122.0], [59.3, 7122.0], [59.4, 7126.0], [59.5, 7357.0], [59.6, 7357.0], [59.7, 7358.0], [59.8, 7358.0], [59.9, 7358.0], [60.0, 7359.0], [60.1, 7360.0], [60.2, 7361.0], [60.3, 7361.0], [60.4, 7361.0], [60.5, 7361.0], [60.6, 7362.0], [60.7, 7363.0], [60.8, 7363.0], [60.9, 7363.0], [61.0, 7363.0], [61.1, 7363.0], [61.2, 7364.0], [61.3, 7364.0], [61.4, 7364.0], [61.5, 7364.0], [61.6, 7364.0], [61.7, 7365.0], [61.8, 7365.0], [61.9, 7365.0], [62.0, 7366.0], [62.1, 7367.0], [62.2, 7367.0], [62.3, 7367.0], [62.4, 7367.0], [62.5, 7369.0], [62.6, 7369.0], [62.7, 7370.0], [62.8, 7370.0], [62.9, 7371.0], [63.0, 7371.0], [63.1, 7372.0], [63.2, 7372.0], [63.3, 7372.0], [63.4, 7374.0], [63.5, 7374.0], [63.6, 7375.0], [63.7, 7375.0], [63.8, 7378.0], [63.9, 7380.0], [64.0, 7382.0], [64.1, 7382.0], [64.2, 7384.0], [64.3, 7385.0], [64.4, 7389.0], [64.5, 7390.0], [64.6, 7535.0], [64.7, 7582.0], [64.8, 10589.0], [64.9, 11431.0], [65.0, 11955.0], [65.1, 13834.0], [65.2, 13856.0], [65.3, 15095.0], [65.4, 15098.0], [65.5, 15100.0], [65.6, 15107.0], [65.7, 15108.0], [65.8, 15108.0], [65.9, 15110.0], [66.0, 15110.0], [66.1, 15112.0], [66.2, 15112.0], [66.3, 15112.0], [66.4, 15115.0], [66.5, 15115.0], [66.6, 15117.0], [66.7, 15117.0], [66.8, 15117.0], [66.9, 15118.0], [67.0, 15118.0], [67.1, 15118.0], [67.2, 15119.0], [67.3, 15119.0], [67.4, 15119.0], [67.5, 15119.0], [67.6, 15120.0], [67.7, 15120.0], [67.8, 15121.0], [67.9, 15123.0], [68.0, 15123.0], [68.1, 15123.0], [68.2, 15123.0], [68.3, 15124.0], [68.4, 15124.0], [68.5, 15125.0], [68.6, 15125.0], [68.7, 15125.0], [68.8, 15126.0], [68.9, 15126.0], [69.0, 15126.0], [69.1, 15127.0], [69.2, 15127.0], [69.3, 15127.0], [69.4, 15127.0], [69.5, 15128.0], [69.6, 15128.0], [69.7, 15128.0], [69.8, 15129.0], [69.9, 15129.0], [70.0, 15129.0], [70.1, 15130.0], [70.2, 15130.0], [70.3, 15130.0], [70.4, 15130.0], [70.5, 15131.0], [70.6, 15131.0], [70.7, 15131.0], [70.8, 15131.0], [70.9, 15131.0], [71.0, 15131.0], [71.1, 15132.0], [71.2, 15132.0], [71.3, 15132.0], [71.4, 15133.0], [71.5, 15133.0], [71.6, 15134.0], [71.7, 15134.0], [71.8, 15135.0], [71.9, 15135.0], [72.0, 15135.0], [72.1, 15136.0], [72.2, 15137.0], [72.3, 15137.0], [72.4, 15137.0], [72.5, 15137.0], [72.6, 15141.0], [72.7, 15141.0], [72.8, 15145.0], [72.9, 15184.0], [73.0, 15289.0], [73.1, 15300.0], [73.2, 15320.0], [73.3, 15374.0], [73.4, 15376.0], [73.5, 15377.0], [73.6, 15378.0], [73.7, 15380.0], [73.8, 15383.0], [73.9, 15387.0], [74.0, 15387.0], [74.1, 15387.0], [74.2, 15388.0], [74.3, 15388.0], [74.4, 15388.0], [74.5, 15389.0], [74.6, 15389.0], [74.7, 15390.0], [74.8, 15390.0], [74.9, 15390.0], [75.0, 15391.0], [75.1, 15392.0], [75.2, 15392.0], [75.3, 15393.0], [75.4, 15393.0], [75.5, 15393.0], [75.6, 15394.0], [75.7, 15394.0], [75.8, 15394.0], [75.9, 15394.0], [76.0, 15394.0], [76.1, 15395.0], [76.2, 15395.0], [76.3, 15395.0], [76.4, 15395.0], [76.5, 15396.0], [76.6, 15396.0], [76.7, 15397.0], [76.8, 15397.0], [76.9, 15397.0], [77.0, 15397.0], [77.1, 15397.0], [77.2, 15398.0], [77.3, 15398.0], [77.4, 15399.0], [77.5, 15399.0], [77.6, 15399.0], [77.7, 15399.0], [77.8, 15401.0], [77.9, 15401.0], [78.0, 15401.0], [78.1, 15401.0], [78.2, 15403.0], [78.3, 15403.0], [78.4, 15405.0], [78.5, 15569.0], [78.6, 15570.0], [78.7, 15572.0], [78.8, 15582.0], [78.9, 15585.0], [79.0, 15965.0], [79.1, 16144.0], [79.2, 16286.0], [79.3, 16287.0], [79.4, 16294.0], [79.5, 16297.0], [79.6, 16298.0], [79.7, 16299.0], [79.8, 16301.0], [79.9, 16302.0], [80.0, 16302.0], [80.1, 16307.0], [80.2, 16308.0], [80.3, 16308.0], [80.4, 16310.0], [80.5, 16311.0], [80.6, 16311.0], [80.7, 16313.0], [80.8, 16318.0], [80.9, 16321.0], [81.0, 16322.0], [81.1, 16328.0], [81.2, 16571.0], [81.3, 16574.0], [81.4, 16577.0], [81.5, 16580.0], [81.6, 16581.0], [81.7, 16581.0], [81.8, 16589.0], [81.9, 16596.0], [82.0, 16597.0], [82.1, 16602.0], [82.2, 16957.0], [82.3, 17065.0], [82.4, 17131.0], [82.5, 17162.0], [82.6, 17293.0], [82.7, 17784.0], [82.8, 17877.0], [82.9, 17915.0], [83.0, 17916.0], [83.1, 17958.0], [83.2, 17994.0], [83.3, 18015.0], [83.4, 18028.0], [83.5, 18033.0], [83.6, 18127.0], [83.7, 18134.0], [83.8, 18163.0], [83.9, 18191.0], [84.0, 18222.0], [84.1, 18223.0], [84.2, 18249.0], [84.3, 18261.0], [84.4, 18273.0], [84.5, 18295.0], [84.6, 18299.0], [84.7, 18299.0], [84.8, 18302.0], [84.9, 18304.0], [85.0, 18305.0], [85.1, 18308.0], [85.2, 18309.0], [85.3, 18309.0], [85.4, 18309.0], [85.5, 18311.0], [85.6, 18312.0], [85.7, 18312.0], [85.8, 18314.0], [85.9, 18314.0], [86.0, 18314.0], [86.1, 18314.0], [86.2, 18316.0], [86.3, 18316.0], [86.4, 18316.0], [86.5, 18317.0], [86.6, 18317.0], [86.7, 18317.0], [86.8, 18318.0], [86.9, 18319.0], [87.0, 18320.0], [87.1, 18320.0], [87.2, 18322.0], [87.3, 18322.0], [87.4, 18322.0], [87.5, 18323.0], [87.6, 18323.0], [87.7, 18323.0], [87.8, 18324.0], [87.9, 18324.0], [88.0, 18327.0], [88.1, 18328.0], [88.2, 18330.0], [88.3, 18330.0], [88.4, 18330.0], [88.5, 18330.0], [88.6, 18331.0], [88.7, 18332.0], [88.8, 18332.0], [88.9, 18332.0], [89.0, 18333.0], [89.1, 18333.0], [89.2, 18334.0], [89.3, 18335.0], [89.4, 18337.0], [89.5, 18337.0], [89.6, 18341.0], [89.7, 18342.0], [89.8, 18342.0], [89.9, 18345.0], [90.0, 18553.0], [90.1, 18553.0], [90.2, 18556.0], [90.3, 18556.0], [90.4, 18566.0], [90.5, 18566.0], [90.6, 18566.0], [90.7, 18569.0], [90.8, 18569.0], [90.9, 18570.0], [91.0, 18573.0], [91.1, 18573.0], [91.2, 18575.0], [91.3, 18576.0], [91.4, 18576.0], [91.5, 18577.0], [91.6, 18577.0], [91.7, 18579.0], [91.8, 18582.0], [91.9, 18584.0], [92.0, 18585.0], [92.1, 18588.0], [92.2, 18588.0], [92.3, 18590.0], [92.4, 18593.0], [92.5, 18594.0], [92.6, 19246.0], [92.7, 19269.0], [92.8, 19279.0], [92.9, 19306.0], [93.0, 19307.0], [93.1, 19320.0], [93.2, 19333.0], [93.3, 19357.0], [93.4, 19454.0], [93.5, 19498.0], [93.6, 19540.0], [93.7, 20006.0], [93.8, 20020.0], [93.9, 20071.0], [94.0, 20103.0], [94.1, 20109.0], [94.2, 20111.0], [94.3, 20130.0], [94.4, 20135.0], [94.5, 20154.0], [94.6, 20160.0], [94.7, 20165.0], [94.8, 20183.0], [94.9, 20204.0], [95.0, 20213.0], [95.1, 20249.0], [95.2, 20251.0], [95.3, 20274.0], [95.4, 20297.0], [95.5, 20346.0], [95.6, 20350.0], [95.7, 20354.0], [95.8, 20361.0], [95.9, 20363.0], [96.0, 20378.0], [96.1, 20393.0], [96.2, 20396.0], [96.3, 20404.0], [96.4, 20408.0], [96.5, 20410.0], [96.6, 20623.0], [96.7, 20630.0], [96.8, 20713.0], [96.9, 20722.0], [97.0, 20730.0], [97.1, 20744.0], [97.2, 20772.0], [97.3, 20783.0], [97.4, 20824.0], [97.5, 20887.0], [97.6, 20902.0], [97.7, 20979.0], [97.8, 20987.0], [97.9, 21011.0], [98.0, 21018.0], [98.1, 21035.0], [98.2, 21081.0], [98.3, 21100.0], [98.4, 21101.0], [98.5, 21105.0], [98.6, 21120.0], [98.7, 21129.0], [98.8, 21133.0], [98.9, 21135.0], [99.0, 21164.0], [99.1, 21175.0], [99.2, 21181.0], [99.3, 21195.0], [99.4, 21214.0], [99.5, 21219.0], [99.6, 21222.0], [99.7, 21590.0], [99.8, 21856.0], [99.9, 21865.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 218.0, "series": [{"data": [[700.0, 1.0], [3100.0, 1.0], [900.0, 1.0], [3800.0, 3.0], [15100.0, 218.0], [15500.0, 1.0], [5200.0, 1.0], [5300.0, 1.0], [5500.0, 8.0], [5600.0, 1.0], [5400.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [6000.0, 6.0], [6100.0, 2.0], [6300.0, 3.0], [6200.0, 1.0], [6400.0, 2.0], [7100.0, 7.0], [1800.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[700.0, 1.0], [900.0, 1.0], [1100.0, 20.0], [1300.0, 2.0], [1400.0, 8.0], [1500.0, 1.0], [100.0, 14.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 2.0], [2600.0, 2.0], [2700.0, 3.0], [2800.0, 4.0], [2900.0, 2.0], [3000.0, 6.0], [3100.0, 57.0], [200.0, 7.0], [3400.0, 28.0], [4000.0, 1.0], [4200.0, 2.0], [4100.0, 7.0], [4300.0, 2.0], [300.0, 8.0], [4700.0, 1.0], [4800.0, 2.0], [4900.0, 8.0], [5000.0, 6.0], [5100.0, 5.0], [5200.0, 8.0], [5600.0, 3.0], [5500.0, 4.0], [5400.0, 2.0], [5700.0, 2.0], [5800.0, 5.0], [5900.0, 8.0], [6000.0, 7.0], [400.0, 14.0], [6600.0, 3.0], [6400.0, 1.0], [6700.0, 1.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1100.0, 2.0], [3900.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [5100.0, 19.0], [5000.0, 3.0], [5200.0, 132.0], [5300.0, 6.0], [5400.0, 28.0], [5500.0, 99.0], [5600.0, 47.0], [5700.0, 26.0], [5800.0, 3.0], [5900.0, 7.0], [6000.0, 79.0], [6100.0, 4.0], [6200.0, 12.0], [6300.0, 20.0], [6400.0, 11.0], [6500.0, 13.0], [6600.0, 5.0], [6700.0, 1.0], [6800.0, 1.0], [7100.0, 52.0], [7000.0, 21.0], [7300.0, 51.0], [7500.0, 2.0], [10500.0, 1.0], [11400.0, 1.0], [11900.0, 1.0], [13800.0, 2.0], [15100.0, 75.0], [15000.0, 2.0], [15300.0, 47.0], [15200.0, 1.0], [15500.0, 5.0], [15400.0, 7.0], [15900.0, 1.0], [16100.0, 1.0], [16200.0, 6.0], [16300.0, 14.0], [16700.0, 1.0], [16500.0, 9.0], [16600.0, 1.0], [16900.0, 1.0], [17000.0, 1.0], [17100.0, 2.0], [17200.0, 1.0], [17700.0, 1.0], [17800.0, 1.0], [17900.0, 4.0], [18000.0, 3.0], [18100.0, 4.0], [18200.0, 8.0], [18300.0, 52.0], [18500.0, 26.0], [19200.0, 3.0], [19300.0, 5.0], [19400.0, 2.0], [19500.0, 1.0], [20000.0, 3.0], [20100.0, 9.0], [20200.0, 6.0], [20300.0, 8.0], [20400.0, 3.0], [20700.0, 6.0], [20800.0, 2.0], [20900.0, 3.0], [21000.0, 4.0], [20600.0, 2.0], [21100.0, 11.0], [21200.0, 3.0], [21500.0, 1.0], [21800.0, 2.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 21800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 36.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1241.0, "series": [{"data": [[0.0, 43.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 36.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 202.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1241.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 85.03550295857987, "minX": 1.70272482E12, "maxY": 485.3201013513516, "series": [{"data": [[1.70272488E12, 85.03550295857987], [1.70272482E12, 485.3201013513516]], "isOverall": false, "label": "Users", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70272488E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 120.0, "minX": 2.0, "maxY": 21860.5, "series": [{"data": [[2.0, 15161.0], [3.0, 15157.0], [4.0, 15169.0], [5.0, 15157.0], [6.0, 15168.0], [7.0, 15161.0], [9.0, 15157.5], [10.0, 15151.0], [11.0, 15160.0], [12.0, 15162.0], [13.0, 15159.0], [15.0, 15156.0], [16.0, 15163.0], [17.0, 15154.0], [18.0, 15153.0], [19.0, 15162.0], [20.0, 15156.0], [21.0, 15160.0], [22.0, 15178.0], [23.0, 15162.0], [24.0, 15163.0], [25.0, 15168.0], [26.0, 15185.0], [27.0, 15173.0], [28.0, 15170.0], [29.0, 15158.0], [30.0, 15145.0], [31.0, 15169.0], [33.0, 15146.0], [32.0, 15146.0], [35.0, 15168.0], [34.0, 15158.0], [37.0, 15162.0], [36.0, 15168.0], [39.0, 15163.0], [38.0, 15153.0], [41.0, 15158.0], [40.0, 15178.0], [43.0, 15155.0], [42.0, 15155.0], [45.0, 15153.0], [44.0, 15165.0], [47.0, 15155.0], [46.0, 15147.0], [49.0, 15161.0], [48.0, 15151.0], [51.0, 15172.0], [50.0, 15165.0], [53.0, 15184.0], [52.0, 15168.0], [55.0, 15157.0], [54.0, 15148.0], [57.0, 15171.0], [56.0, 15161.0], [59.0, 15192.0], [58.0, 15156.0], [61.0, 15152.0], [60.0, 15173.0], [63.0, 15142.0], [62.0, 15143.0], [67.0, 15183.0], [66.0, 15162.0], [65.0, 15147.0], [64.0, 15157.0], [71.0, 15162.0], [70.0, 15171.0], [69.0, 15171.0], [68.0, 15182.0], [75.0, 15158.0], [74.0, 15167.0], [73.0, 15165.0], [72.0, 15157.0], [79.0, 15155.0], [78.0, 15152.0], [77.0, 15144.0], [76.0, 15162.0], [83.0, 15162.0], [82.0, 15159.0], [80.0, 15161.0], [87.0, 15142.0], [86.0, 15154.0], [85.0, 15143.0], [84.0, 15155.0], [91.0, 15170.0], [90.0, 15136.0], [89.0, 15163.0], [88.0, 15170.0], [95.0, 15182.0], [94.0, 15153.0], [93.0, 15156.0], [92.0, 15150.0], [99.0, 15182.0], [98.0, 15151.0], [97.0, 15158.0], [96.0, 15161.0], [103.0, 15166.0], [102.0, 15164.0], [101.0, 15161.0], [100.0, 15178.0], [107.0, 15163.0], [106.0, 15161.0], [105.0, 15173.0], [104.0, 15180.0], [111.0, 15176.0], [110.0, 15172.0], [109.0, 15166.0], [108.0, 15164.0], [114.0, 15166.0], [113.0, 15171.0], [112.0, 15161.0], [119.0, 15166.0], [118.0, 15172.0], [117.0, 15159.0], [116.0, 15170.0], [123.0, 15162.0], [122.0, 15171.0], [121.0, 15183.0], [120.0, 15166.0], [127.0, 15178.0], [126.0, 15165.0], [125.0, 15164.0], [124.0, 15176.0], [134.0, 15176.0], [133.0, 15176.0], [132.0, 15175.0], [131.0, 15167.0], [130.0, 15181.0], [129.0, 15160.0], [128.0, 15176.0], [143.0, 15178.0], [142.0, 15159.0], [141.0, 15164.0], [140.0, 15168.0], [139.0, 15171.0], [138.0, 15172.0], [137.0, 15173.0], [136.0, 15177.0], [151.0, 15177.0], [150.0, 15174.0], [149.0, 15165.0], [148.0, 15196.0], [147.0, 15178.0], [146.0, 15170.0], [145.0, 15167.0], [144.0, 15180.0], [159.0, 15173.0], [158.0, 15174.0], [157.0, 15177.0], [156.0, 15159.0], [155.0, 15162.0], [154.0, 15164.0], [153.0, 15160.0], [152.0, 15178.0], [167.0, 15172.0], [166.0, 15169.0], [165.0, 15154.0], [164.0, 15169.0], [163.0, 15178.0], [162.0, 15161.0], [161.0, 15162.0], [160.0, 15176.0], [175.0, 15183.0], [174.0, 15529.0], [173.0, 15164.0], [172.0, 15182.0], [171.0, 15176.0], [170.0, 15165.0], [169.0, 15174.0], [168.0, 15178.0], [183.0, 15173.0], [182.0, 15186.0], [181.0, 15186.0], [180.0, 15163.0], [179.0, 15163.0], [178.0, 15172.0], [177.0, 15171.0], [176.0, 15167.0], [191.0, 15179.0], [190.0, 15173.0], [189.0, 15177.0], [188.0, 15170.0], [187.0, 15170.0], [186.0, 15185.0], [185.0, 15179.0], [184.0, 15169.0], [199.0, 15178.0], [198.0, 15173.0], [197.0, 15175.0], [196.0, 15172.0], [195.0, 15195.0], [194.0, 15184.0], [193.0, 15176.0], [192.0, 15190.0], [207.0, 15170.0], [206.0, 15167.0], [205.0, 15154.0], [204.0, 15173.0], [203.0, 15167.0], [202.0, 15160.0], [201.0, 15167.0], [200.0, 15171.0], [211.0, 15175.0], [209.0, 15156.0], [208.0, 15162.0], [250.0, 15174.0], [269.0, 15174.0], [268.0, 15169.0], [267.0, 15178.0], [265.0, 15167.0], [264.0, 15189.0], [287.0, 15188.0], [291.0, 15178.0], [324.0, 15178.0], [351.0, 7156.0], [350.0, 7143.0], [349.0, 7158.0], [353.0, 7176.0], [352.0, 7166.0], [408.0, 7136.0], [425.0, 7140.0], [481.0, 6427.0], [503.0, 6177.0], [539.0, 3144.0], [533.0, 6352.0], [532.0, 6333.0], [531.0, 6430.0], [530.0, 6375.0], [528.0, 6269.0], [574.0, 6087.0], [557.0, 5858.0], [545.0, 6134.0], [593.0, 6074.0], [587.0, 6079.0], [629.0, 6064.0], [628.0, 6048.0], [624.0, 6089.0], [670.0, 5696.0], [660.0, 5524.0], [656.0, 5508.0], [649.0, 5489.0], [678.0, 5712.0], [757.0, 5289.0], [755.0, 5327.0], [753.0, 5552.0], [752.0, 5549.5], [750.0, 5559.0], [748.0, 5572.0], [745.0, 5576.0], [822.0, 1828.0], [1000.0, 882.5], [998.0, 3820.0], [997.0, 3800.0], [996.0, 3885.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[196.50191570881213, 13620.226053639844]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 6699.0], [3.0, 6432.0], [4.0, 6050.0], [5.0, 6065.0], [6.0, 6046.0], [7.0, 6034.0], [9.0, 6015.0], [10.0, 6024.0], [11.0, 5969.0], [12.0, 5973.0], [13.0, 5974.0], [15.0, 5956.5], [16.0, 5938.0], [17.0, 5927.0], [18.0, 5947.0], [19.0, 5740.0], [20.0, 5466.0], [21.0, 5470.0], [22.0, 5566.0], [23.0, 5551.0], [24.0, 5567.0], [25.0, 5867.0], [26.0, 5537.0], [27.0, 5837.0], [28.0, 5847.0], [29.0, 5829.0], [30.0, 5834.0], [31.0, 5718.0], [33.0, 5677.0], [32.0, 5637.0], [35.0, 5242.0], [34.0, 5614.0], [37.0, 5241.0], [36.0, 5239.0], [39.0, 5230.0], [38.0, 5243.0], [41.0, 5205.0], [40.0, 5200.0], [43.0, 5199.0], [42.0, 5206.0], [45.0, 5192.0], [44.0, 5185.0], [47.0, 5118.0], [46.0, 5150.0], [49.0, 5087.0], [48.0, 5099.0], [51.0, 5010.0], [50.0, 5047.0], [53.0, 4981.0], [52.0, 5035.0], [55.0, 4997.0], [54.0, 5012.0], [57.0, 4959.0], [56.0, 4974.0], [59.0, 4918.0], [58.0, 4953.0], [61.0, 4918.0], [60.0, 4929.0], [63.0, 4864.0], [62.0, 4877.0], [67.0, 4174.0], [66.0, 4292.0], [65.0, 4351.0], [64.0, 4383.0], [71.0, 3413.0], [70.0, 4149.0], [69.0, 3423.0], [68.0, 4151.0], [75.0, 4111.0], [74.0, 4111.0], [73.0, 4141.0], [72.0, 4150.0], [79.0, 3413.0], [78.0, 3404.0], [77.0, 3409.0], [76.0, 4084.0], [83.0, 3426.0], [82.0, 3415.0], [80.0, 3408.0], [87.0, 3423.0], [86.0, 3422.0], [85.0, 3410.0], [84.0, 3418.0], [91.0, 3414.0], [90.0, 3136.0], [89.0, 3406.0], [88.0, 3407.0], [95.0, 3132.0], [94.0, 3142.0], [93.0, 3158.0], [92.0, 3416.0], [99.0, 3408.0], [98.0, 3405.0], [97.0, 3415.0], [96.0, 3158.0], [103.0, 3143.0], [102.0, 3415.0], [101.0, 3427.0], [100.0, 3407.0], [107.0, 3148.0], [106.0, 3147.0], [105.0, 3403.0], [104.0, 3413.0], [111.0, 3136.0], [110.0, 3145.0], [109.0, 3156.0], [108.0, 3413.0], [114.0, 3157.0], [113.0, 3163.0], [112.0, 3148.0], [119.0, 3156.0], [118.0, 3170.0], [117.0, 3150.0], [116.0, 3144.0], [123.0, 3171.0], [122.0, 3151.0], [121.0, 3147.0], [120.0, 3150.0], [127.0, 3167.0], [126.0, 3146.0], [125.0, 3156.0], [124.0, 3147.0], [134.0, 3155.0], [133.0, 3159.0], [132.0, 3155.0], [131.0, 3150.0], [130.0, 3151.0], [129.0, 3154.0], [128.0, 3161.0], [143.0, 3145.0], [142.0, 3140.0], [141.0, 3152.0], [140.0, 3146.0], [139.0, 3145.0], [138.0, 3160.0], [137.0, 3150.0], [136.0, 3148.0], [151.0, 3160.0], [150.0, 3156.0], [149.0, 3153.0], [148.0, 3146.0], [147.0, 3152.0], [146.0, 3146.0], [145.0, 3160.0], [144.0, 3153.0], [159.0, 3050.0], [158.0, 3075.0], [157.0, 3084.0], [156.0, 3182.0], [155.0, 3140.0], [154.0, 3141.0], [153.0, 3139.0], [152.0, 3150.0], [167.0, 2843.0], [166.0, 2858.0], [165.0, 2879.0], [164.0, 2958.0], [163.0, 2955.0], [162.0, 3002.0], [161.0, 3029.0], [160.0, 3046.0], [175.0, 1394.0], [174.0, 1764.0], [173.0, 2619.0], [172.0, 2694.0], [171.0, 2739.0], [170.0, 2750.0], [169.0, 2784.0], [168.0, 2816.0], [183.0, 1129.0], [182.0, 1411.0], [181.0, 1879.0], [180.0, 1425.0], [179.0, 1417.0], [178.0, 1958.0], [177.0, 1991.0], [176.0, 1406.0], [191.0, 1131.0], [190.0, 1397.0], [189.0, 1134.0], [188.0, 1137.0], [187.0, 1787.0], [186.0, 1143.0], [185.0, 1139.0], [184.0, 1132.0], [199.0, 1529.0], [198.0, 1125.0], [197.0, 1138.0], [196.0, 1408.0], [195.0, 1126.0], [194.0, 1418.0], [193.0, 1404.0], [192.0, 1406.0], [207.0, 1140.0], [206.0, 1131.0], [205.0, 1132.0], [204.0, 1149.0], [203.0, 1141.0], [202.0, 1137.0], [201.0, 1141.0], [200.0, 1130.0], [211.0, 393.0], [209.0, 1130.0], [208.0, 1132.0], [250.0, 411.0], [269.0, 408.0], [268.0, 120.0], [267.0, 122.0], [265.0, 405.0], [264.0, 954.0], [287.0, 131.0], [291.0, 392.0], [324.0, 787.0], [351.0, 4799.0], [350.0, 6691.0], [349.0, 6698.0], [353.0, 3413.0], [352.0, 4265.0], [408.0, 446.0], [425.0, 395.0], [481.0, 410.0], [503.0, 390.0], [539.0, 3144.0], [533.0, 128.0], [532.0, 320.0], [531.0, 130.0], [530.0, 401.0], [528.0, 392.0], [574.0, 136.0], [557.0, 122.0], [545.0, 416.0], [593.0, 414.0], [587.0, 417.0], [629.0, 145.0], [628.0, 129.0], [624.0, 130.0], [670.0, 132.0], [660.0, 405.0], [656.0, 381.0], [649.0, 139.0], [678.0, 232.0], [757.0, 442.0], [755.0, 443.0], [753.0, 218.0], [752.0, 221.0], [750.0, 211.0], [748.0, 212.0], [745.0, 211.0], [822.0, 3408.0], [1000.0, 257.0], [998.0, 137.0], [997.0, 406.0], [996.0, 439.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[196.50191570881213, 3074.310344827588]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 21860.5], [3.0, 21590.0], [4.0, 21219.0], [5.0, 21222.0], [6.0, 21214.0], [7.0, 21195.0], [9.0, 21172.5], [10.0, 21175.0], [11.0, 21129.0], [12.0, 21135.0], [13.0, 21133.0], [15.0, 21112.5], [16.0, 21101.0], [17.0, 21081.0], [18.0, 21100.0], [19.0, 20902.0], [20.0, 20623.0], [21.0, 20630.0], [22.0, 20744.0], [23.0, 20713.0], [24.0, 20730.0], [25.0, 21035.0], [26.0, 20722.0], [27.0, 21011.0], [28.0, 21018.0], [29.0, 20987.0], [30.0, 20979.0], [31.0, 20887.0], [33.0, 20824.0], [32.0, 20783.0], [35.0, 20410.0], [34.0, 20772.0], [37.0, 20404.0], [36.0, 20408.0], [39.0, 20393.0], [38.0, 20396.0], [41.0, 20363.0], [40.0, 20378.0], [43.0, 20354.0], [42.0, 20361.0], [45.0, 20346.0], [44.0, 20350.0], [47.0, 20274.0], [46.0, 20297.0], [49.0, 20249.0], [48.0, 20251.0], [51.0, 20183.0], [50.0, 20213.0], [53.0, 20165.0], [52.0, 20204.0], [55.0, 20154.0], [54.0, 20160.0], [57.0, 20130.0], [56.0, 20135.0], [59.0, 20111.0], [58.0, 20109.0], [61.0, 20071.0], [60.0, 20103.0], [63.0, 20006.0], [62.0, 20020.0], [67.0, 19357.0], [66.0, 19454.0], [65.0, 19498.0], [64.0, 19540.0], [71.0, 18575.0], [70.0, 19320.0], [69.0, 18594.0], [68.0, 19333.0], [75.0, 19269.0], [74.0, 19279.0], [73.0, 19306.0], [72.0, 19307.0], [79.0, 18569.0], [78.0, 18556.0], [77.0, 18553.0], [76.0, 19246.0], [83.0, 18588.0], [82.0, 18574.0], [80.0, 18569.0], [87.0, 18566.0], [86.0, 18576.0], [85.0, 18553.0], [84.0, 18573.0], [91.0, 18584.0], [90.0, 18273.0], [89.0, 18570.0], [88.0, 18577.0], [95.0, 18314.0], [94.0, 18295.0], [93.0, 18314.0], [92.0, 18566.0], [99.0, 18590.0], [98.0, 18556.0], [97.0, 18573.0], [96.0, 18319.0], [103.0, 18309.0], [102.0, 18579.0], [101.0, 18588.0], [100.0, 18585.0], [107.0, 18311.0], [106.0, 18308.0], [105.0, 18576.0], [104.0, 18593.0], [111.0, 18312.0], [110.0, 18317.0], [109.0, 18322.0], [108.0, 18577.0], [114.0, 18324.0], [113.0, 18334.0], [112.0, 18309.0], [119.0, 18322.0], [118.0, 18342.0], [117.0, 18309.0], [116.0, 18314.0], [123.0, 18333.0], [122.0, 18322.0], [121.0, 18330.0], [120.0, 18316.0], [127.0, 18345.0], [126.0, 18312.0], [125.0, 18320.0], [124.0, 18323.0], [134.0, 18332.0], [133.0, 18335.0], [132.0, 18330.0], [131.0, 18317.0], [130.0, 18332.0], [129.0, 18314.0], [128.0, 18337.0], [143.0, 18323.0], [142.0, 18299.0], [141.0, 18316.0], [140.0, 18314.0], [139.0, 18317.0], [138.0, 18332.0], [137.0, 18323.0], [136.0, 18325.5], [151.0, 18337.0], [150.0, 18330.0], [149.0, 18318.0], [148.0, 18342.0], [147.0, 18330.0], [146.0, 18316.0], [145.0, 18327.0], [144.0, 18333.0], [159.0, 18223.0], [158.0, 18249.0], [157.0, 18261.0], [156.0, 18341.0], [155.0, 18302.0], [154.0, 18305.0], [153.0, 18299.0], [152.0, 18328.0], [167.0, 18015.0], [166.0, 18028.0], [165.0, 18033.0], [164.0, 18127.0], [163.0, 18134.0], [162.0, 18163.0], [161.0, 18191.0], [160.0, 18222.0], [175.0, 16577.0], [174.0, 17293.0], [173.0, 17784.0], [172.0, 17877.0], [171.0, 17916.0], [170.0, 17915.0], [169.0, 17958.0], [168.0, 17994.0], [183.0, 16302.0], [182.0, 16597.0], [181.0, 17065.0], [180.0, 16589.0], [179.0, 16581.0], [178.0, 17131.0], [177.0, 17162.0], [176.0, 16574.0], [191.0, 16311.0], [190.0, 16571.0], [189.0, 16311.0], [188.0, 16307.0], [187.0, 16957.0], [186.0, 16328.0], [185.0, 16318.0], [184.0, 16302.0], [199.0, 16707.0], [198.0, 16299.0], [197.0, 16313.0], [196.0, 16580.0], [195.0, 16321.0], [194.0, 16602.0], [193.0, 16581.0], [192.0, 16596.0], [207.0, 16310.0], [206.0, 16298.0], [205.0, 16286.0], [204.0, 16322.0], [203.0, 16308.0], [202.0, 16297.0], [201.0, 16308.0], [200.0, 16301.0], [214.0, 15395.0], [213.0, 15379.0], [211.0, 15569.0], [210.0, 15389.0], [209.0, 16287.0], [208.0, 16294.0], [223.0, 15394.0], [222.0, 15393.0], [221.0, 15399.0], [220.0, 15377.0], [219.0, 15376.0], [218.0, 15374.0], [217.0, 15389.0], [216.0, 15391.0], [231.0, 15397.0], [230.0, 15398.0], [229.0, 15394.0], [228.0, 15397.0], [227.0, 15387.0], [226.0, 15396.0], [225.0, 15400.5], [239.0, 15393.0], [238.0, 15392.5], [236.0, 15395.0], [235.0, 15395.0], [234.0, 15394.666666666666], [247.0, 15387.0], [246.0, 15401.0], [245.0, 15391.0], [243.0, 15399.0], [242.0, 15402.0], [240.0, 15405.0], [255.0, 15395.0], [253.0, 15388.0], [252.0, 15396.0], [251.0, 15390.0], [250.0, 15585.0], [249.0, 15387.0], [248.0, 15394.0], [270.0, 15131.0], [271.0, 15130.0], [269.0, 15582.0], [268.0, 15289.0], [267.0, 15300.0], [266.0, 15184.0], [265.0, 15572.0], [264.0, 16144.0], [263.0, 15391.0], [259.0, 15392.0], [258.0, 15399.0], [257.0, 15401.0], [261.0, 15391.5], [275.0, 15115.0], [286.0, 15127.0], [287.0, 15320.0], [284.0, 15112.5], [282.0, 15117.333333333334], [279.0, 15127.0], [278.0, 15112.0], [277.0, 15112.0], [276.0, 15117.0], [274.0, 15123.0], [273.0, 15133.0], [272.0, 15118.0], [301.0, 15130.0], [299.0, 15117.0], [297.0, 15095.0], [296.0, 15112.0], [295.0, 15137.0], [289.0, 15118.0], [288.0, 15130.0], [294.0, 15118.0], [293.0, 15131.0], [292.0, 15145.0], [291.0, 15570.0], [290.0, 15100.0], [317.0, 15127.0], [318.0, 15132.0], [316.0, 15133.0], [307.0, 15126.0], [306.0, 15127.0], [305.0, 15122.25], [315.0, 15132.5], [313.0, 15134.0], [312.0, 15127.0], [311.0, 15107.0], [310.0, 15118.0], [308.0, 15131.0], [334.0, 15122.5], [335.0, 15117.0], [332.0, 15131.0], [323.0, 15119.5], [321.0, 15125.333333333334], [331.0, 15130.5], [329.0, 15125.0], [328.0, 15132.0], [327.0, 15131.0], [326.0, 15137.0], [325.0, 15141.0], [324.0, 15965.0], [350.0, 13834.0], [351.0, 11955.0], [349.0, 13856.0], [348.0, 15129.0], [347.0, 15123.0], [346.0, 15131.0], [345.0, 15137.0], [344.0, 15130.0], [343.0, 15123.0], [337.0, 15128.0], [336.0, 15130.0], [339.0, 15121.0], [338.0, 15125.0], [342.0, 15117.0], [341.0, 15141.0], [340.0, 15135.0], [365.0, 7358.0], [366.0, 7369.0], [364.0, 7372.0], [354.0, 7382.0], [353.0, 10589.0], [352.0, 11431.0], [363.0, 7378.5], [361.0, 7367.0], [360.0, 7367.0], [359.0, 7374.0], [358.0, 7389.0], [357.0, 7378.0], [356.0, 7386.0], [380.0, 7365.0], [382.0, 7359.0], [383.0, 7358.0], [381.0, 7371.0], [379.0, 7359.0], [376.0, 7366.0], [375.0, 7367.0], [370.0, 7370.0], [369.0, 7368.0], [374.0, 7365.0], [373.0, 7366.0], [387.0, 7361.0], [399.0, 7360.0], [398.0, 7367.333333333333], [386.0, 7370.0], [385.0, 7364.0], [384.0, 7375.0], [395.0, 7364.0], [394.0, 7361.0], [393.0, 7362.0], [391.0, 7363.0], [390.0, 7365.0], [389.0, 7363.0], [388.0, 7363.0], [414.0, 7099.5], [415.0, 7103.0], [412.0, 7105.0], [403.0, 7364.0], [402.0, 7369.0], [401.0, 7384.0], [400.0, 7380.0], [411.0, 7119.0], [410.0, 7100.0], [409.0, 7095.0], [408.0, 7582.0], [407.0, 7098.0], [406.0, 7108.5], [404.0, 7364.0], [419.0, 7105.0], [431.0, 7100.0], [428.0, 7103.5], [418.0, 7094.0], [417.0, 7108.0], [416.0, 7097.0], [426.0, 7094.0], [425.0, 7535.0], [424.0, 7089.0], [423.0, 7104.0], [422.0, 7102.0], [421.0, 7098.0], [420.0, 7101.0], [446.0, 7099.0], [447.0, 7097.0], [445.0, 7101.0], [444.0, 7107.0], [443.0, 7103.0], [442.0, 7097.0], [441.0, 7096.5], [439.0, 7096.0], [432.0, 7094.0], [435.0, 7102.0], [433.0, 7095.0], [437.0, 7109.0], [436.0, 7094.0], [462.0, 7124.0], [463.0, 7102.0], [460.0, 7103.0], [451.0, 7103.0], [450.0, 7104.0], [449.0, 7103.0], [448.0, 7102.0], [459.0, 7100.0], [458.0, 7102.0], [457.0, 7101.0], [456.0, 7096.5], [454.0, 7103.0], [452.0, 7095.0], [478.0, 7106.0], [479.0, 7117.0], [477.0, 7113.0], [476.0, 7115.0], [475.0, 7117.0], [474.0, 7107.0], [473.0, 7105.0], [472.0, 7112.0], [471.0, 7114.0], [467.0, 7103.0], [465.0, 7118.0], [464.0, 7109.0], [468.0, 7122.0], [483.0, 6366.0], [495.0, 6514.0], [494.0, 6402.5], [490.0, 6339.0], [489.0, 6337.0], [488.0, 6483.0], [486.0, 6520.333333333333], [480.0, 6348.0], [482.0, 6370.0], [481.0, 6838.0], [511.0, 6510.75], [507.0, 6346.75], [503.0, 6567.0], [502.0, 6495.333333333333], [499.0, 6584.0], [498.0, 6423.333333333333], [540.0, 6009.0], [543.0, 6072.0], [529.0, 6196.0], [528.0, 6617.5], [531.0, 6560.0], [530.0, 6416.0], [533.0, 6481.0], [532.0, 6653.0], [542.0, 5917.0], [541.0, 6028.0], [539.0, 6288.0], [538.0, 6018.0], [537.0, 6034.0], [536.0, 6077.0], [524.0, 6335.0], [513.0, 6454.0], [512.0, 6337.0], [521.0, 6339.2], [520.0, 6337.0], [535.0, 6093.0], [534.0, 6090.0], [574.0, 6224.0], [575.0, 5772.0], [560.0, 6057.0], [562.0, 6042.0], [561.0, 6036.0], [573.0, 6042.0], [572.0, 6045.0], [571.0, 6042.0], [570.0, 6005.0], [559.0, 6046.0], [545.0, 6551.0], [544.0, 6080.0], [549.0, 6036.5], [547.0, 6108.0], [558.0, 5804.0], [557.0, 5981.0], [556.0, 6066.0], [555.0, 6047.0], [553.0, 6035.0], [552.0, 6061.333333333333], [567.0, 6029.0], [566.0, 6034.0], [564.0, 6203.0], [563.0, 6161.0], [600.0, 6022.0], [606.0, 6027.0], [607.0, 6044.0], [593.0, 6488.0], [592.0, 6041.0], [595.0, 6047.0], [594.0, 6038.0], [605.0, 6016.0], [604.0, 6019.5], [602.0, 6043.5], [591.0, 6032.0], [577.0, 6028.0], [576.0, 6029.0], [579.0, 6024.0], [578.0, 6033.0], [581.0, 6024.0], [580.0, 6032.0], [590.0, 6025.0], [588.0, 6037.0], [587.0, 6497.0], [586.0, 6030.5], [584.0, 6020.666666666667], [599.0, 6022.0], [598.0, 6029.0], [597.0, 6016.0], [596.0, 6035.0], [633.0, 5978.0], [637.0, 5669.0], [638.0, 5392.0], [625.0, 6026.0], [624.0, 6220.0], [627.0, 6005.0], [626.0, 6028.0], [629.0, 6209.0], [628.0, 6177.0], [636.0, 5425.0], [635.0, 5621.0], [634.0, 5435.0], [632.0, 6001.0], [615.0, 6032.0], [614.0, 6035.0], [612.0, 6031.0], [611.0, 6035.0], [610.0, 6027.0], [609.0, 6025.0], [623.0, 6014.0], [622.0, 6022.0], [621.0, 6032.0], [620.0, 6032.5], [618.0, 6032.0], [617.0, 6032.0], [616.0, 6021.0], [631.0, 6001.0], [630.0, 6011.0], [668.0, 5734.0], [671.0, 5743.0], [657.0, 5474.0], [656.0, 5808.5], [659.0, 5757.0], [658.0, 5746.0], [661.0, 5487.0], [660.0, 5929.0], [670.0, 5829.0], [669.0, 5550.0], [667.0, 5460.0], [666.0, 5749.0], [665.0, 5754.0], [664.0, 5762.0], [654.0, 5473.0], [641.0, 5517.333333333333], [643.0, 5707.0], [642.0, 5437.0], [645.0, 5444.0], [644.0, 5720.0], [647.0, 5462.0], [646.0, 5726.0], [653.0, 5733.0], [652.0, 5483.0], [651.0, 5716.0], [650.0, 5723.0], [649.0, 5677.5], [663.0, 5467.0], [662.0, 5754.0], [697.0, 5643.0], [701.0, 5640.0], [702.0, 5646.0], [691.0, 5649.0], [689.0, 5655.0], [693.0, 5646.0], [692.0, 5654.0], [700.0, 5640.0], [699.0, 5647.0], [698.0, 5659.0], [696.0, 5644.0], [679.0, 5639.0], [678.0, 5944.0], [677.0, 5656.0], [676.0, 5642.0], [675.0, 5649.0], [674.0, 5660.0], [673.0, 5648.5], [686.0, 5653.0], [685.0, 5650.0], [684.0, 5654.0], [683.0, 5669.333333333333], [680.0, 5663.0], [695.0, 5660.0], [694.0, 5648.0], [729.0, 5101.0], [734.0, 5418.0], [735.0, 5157.0], [720.0, 5187.5], [722.0, 5281.0], [721.0, 5248.0], [725.0, 5309.0], [724.0, 5245.5], [733.0, 5417.0], [732.0, 5334.0], [731.0, 5268.5], [728.0, 5095.0], [711.0, 5126.0], [710.0, 5643.0], [709.0, 5642.0], [708.0, 5648.5], [706.0, 5653.0], [705.0, 5645.0], [704.0, 5657.5], [718.0, 5221.0], [717.0, 5082.0], [716.0, 5150.0], [715.0, 5163.0], [714.0, 5635.0], [712.0, 5644.0], [727.0, 5237.0], [726.0, 5326.0], [765.0, 5556.0], [767.0, 5539.0], [752.0, 5772.0], [755.0, 5506.5], [753.0, 5770.0], [764.0, 5553.0], [763.0, 5523.0], [762.0, 5522.0], [761.0, 5412.0], [750.0, 5772.0], [738.0, 5343.0], [742.0, 5164.0], [739.0, 5144.0], [749.0, 5201.0], [748.0, 5786.0], [747.0, 5471.0], [746.0, 5233.0], [745.0, 5789.0], [744.0, 5312.0], [759.0, 5526.0], [758.0, 5531.0], [757.0, 5731.0], [756.0, 5481.0], [792.0, 5547.0], [798.0, 5533.0], [799.0, 5520.0], [784.0, 5541.0], [786.0, 5273.0], [785.0, 5539.0], [797.0, 5541.0], [796.0, 5532.666666666667], [793.0, 5541.0], [783.0, 5532.0], [770.0, 5397.0], [768.0, 5551.0], [772.0, 5534.0], [771.0, 5526.0], [774.0, 5543.0], [773.0, 5550.0], [782.0, 5527.0], [781.0, 5527.0], [780.0, 5546.0], [779.0, 5527.0], [778.0, 5539.0], [777.0, 5440.0], [791.0, 5533.0], [790.0, 5269.0], [789.0, 5529.5], [787.0, 5541.0], [826.0, 5520.5], [830.0, 5248.0], [831.0, 5597.0], [817.0, 5516.0], [816.0, 5514.5], [829.0, 5535.0], [828.0, 5598.0], [827.0, 5600.0], [824.0, 5506.0], [807.0, 5522.0], [806.0, 5524.0], [805.0, 5535.5], [803.0, 5540.0], [802.0, 5279.0], [801.0, 5543.0], [800.0, 5538.0], [814.0, 5538.0], [813.0, 5544.5], [811.0, 5517.0], [810.0, 5442.666666666667], [822.0, 5480.5], [820.0, 5508.0], [858.0, 5536.5], [862.0, 5524.0], [863.0, 5523.0], [848.0, 5552.0], [853.0, 5549.666666666667], [850.0, 5502.5], [861.0, 5499.0], [860.0, 5527.0], [859.0, 5527.0], [856.0, 5541.0], [839.0, 5534.666666666667], [836.0, 5514.0], [835.0, 5529.0], [834.0, 5593.0], [833.0, 5594.0], [832.0, 5512.0], [847.0, 5502.0], [846.0, 5559.0], [845.0, 5562.0], [844.0, 5367.0], [842.0, 5510.0], [841.0, 5528.0], [840.0, 5525.0], [855.0, 5233.0], [854.0, 5535.0], [889.0, 5253.0], [894.0, 5257.0], [895.0, 5251.0], [881.0, 5239.0], [880.0, 5221.5], [884.0, 5260.5], [882.0, 5262.0], [893.0, 5256.0], [892.0, 5248.5], [890.0, 5256.0], [888.0, 5251.0], [871.0, 5495.0], [870.0, 5490.0], [869.0, 5510.0], [868.0, 5508.5], [866.0, 5513.0], [865.0, 5513.0], [864.0, 5508.0], [878.0, 5210.0], [876.0, 5489.0], [875.0, 5477.0], [874.0, 5497.0], [873.0, 5500.0], [872.0, 5500.0], [887.0, 5254.5], [885.0, 5247.0], [921.0, 5244.0], [916.0, 5245.666666666667], [924.0, 5245.0], [925.0, 5249.0], [913.0, 5246.0], [912.0, 5241.0], [923.0, 5246.5], [920.0, 5257.0], [903.0, 5249.333333333333], [900.0, 5251.0], [899.0, 5249.0], [898.0, 5242.0], [897.0, 5253.0], [896.0, 5245.0], [911.0, 5246.0], [910.0, 5247.0], [909.0, 5249.0], [908.0, 5257.0], [906.0, 5254.0], [905.0, 5243.0], [904.0, 5241.0], [919.0, 5248.0], [918.0, 5243.0], [917.0, 5255.0], [953.0, 5252.0], [958.0, 5244.0], [959.0, 5246.0], [947.0, 5255.0], [946.0, 5246.333333333333], [949.0, 5247.0], [948.0, 5252.0], [956.0, 5229.0], [955.0, 5247.0], [954.0, 5244.0], [952.0, 5253.0], [933.0, 5257.0], [932.0, 5252.0], [931.0, 5245.0], [930.0, 5249.5], [928.0, 5250.0], [943.0, 5246.0], [942.0, 5247.0], [941.0, 5257.0], [940.0, 5236.0], [939.0, 5252.0], [937.0, 5266.0], [936.0, 5262.666666666667], [951.0, 5258.0], [950.0, 5254.0], [984.0, 5255.0], [989.0, 5228.0], [990.0, 5196.0], [976.0, 5240.0], [978.0, 5267.0], [977.0, 5233.0], [988.0, 5233.0], [987.0, 5247.0], [986.0, 5221.0], [975.0, 5241.0], [961.0, 5248.0], [960.0, 5247.0], [963.0, 5239.0], [962.0, 5244.0], [965.0, 5237.0], [964.0, 5265.0], [967.0, 5231.0], [966.0, 5236.0], [974.0, 5235.0], [973.0, 5249.0], [972.0, 5239.0], [971.0, 5240.0], [970.0, 5255.0], [969.0, 5247.0], [968.0, 5239.0], [983.0, 5221.0], [982.0, 5227.5], [980.0, 5234.0], [979.0, 5266.0], [1000.0, 1140.0], [998.0, 3957.0], [997.0, 4206.0], [996.0, 4324.0], [995.0, 5161.5], [993.0, 5211.0], [992.0, 5190.5]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[500.7830000000002, 9952.042000000009]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1005.55, "minX": 1.70272482E12, "maxY": 46749.583333333336, "series": [{"data": [[1.70272488E12, 5551.65], [1.70272482E12, 46749.583333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70272488E12, 1005.55], [1.70272482E12, 2530.733333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70272488E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3074.310344827588, "minX": 1.70272482E12, "maxY": 19291.875739644966, "series": [{"data": [[1.70272488E12, 15164.62130177515], [1.70272482E12, 10783.23913043479]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70272482E12, 3074.310344827588]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70272488E12, 19291.875739644966], [1.70272482E12, 8052.605294825509]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70272488E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3074.260536398469, "minX": 1.70272482E12, "maxY": 15164.609467455623, "series": [{"data": [[1.70272488E12, 15164.609467455623], [1.70272482E12, 10778.173913043476]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70272482E12, 3074.260536398469]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70272488E12, 4127.076923076923], [1.70272482E12, 6858.71961492178]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70272488E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1429.35632183908, "minX": 1.70272482E12, "maxY": 15120.958579881657, "series": [{"data": [[1.70272488E12, 15120.958579881657], [1.70272482E12, 9424.586956521736]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70272482E12, 1429.35632183908]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70272488E12, 1911.6745562130175], [1.70272482E12, 4074.470517448858]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70272488E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 120.0, "minX": 1.70272482E12, "maxY": 6704.0, "series": [{"data": [[1.70272482E12, 6704.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70272482E12, 120.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70272482E12, 5915.000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70272482E12, 6694.72]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70272482E12, 3155.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.70272482E12, 6063.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70272482E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 276.0, "minX": 2.0, "maxY": 18376.0, "series": [{"data": [[37.0, 4111.0], [39.0, 1138.0], [80.0, 3151.5], [82.0, 6694.0], [42.0, 276.0], [355.0, 5150.0], [13.0, 2739.0], [246.0, 5956.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 9555.5], [138.0, 16577.0], [38.0, 15915.5], [179.0, 15179.0], [12.0, 15128.5], [51.0, 7366.0], [58.0, 17599.0], [246.0, 6035.0], [62.0, 17904.0], [4.0, 8882.5], [74.0, 16728.0], [82.0, 7103.0], [355.0, 5445.5], [6.0, 18376.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 355.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 276.0, "minX": 2.0, "maxY": 15136.0, "series": [{"data": [[37.0, 3838.0], [39.0, 1137.0], [80.0, 3151.5], [82.0, 6694.0], [42.0, 276.0], [355.0, 5118.0], [13.0, 2739.0], [246.0, 5897.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 5977.5], [138.0, 9290.5], [38.0, 8956.5], [179.0, 15136.0], [12.0, 15128.5], [51.0, 7366.0], [58.0, 10192.5], [246.0, 6030.0], [62.0, 10605.0], [4.0, 6920.5], [74.0, 9759.5], [82.0, 7102.0], [355.0, 5317.5], [6.0, 10930.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 355.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.366666666666667, "minX": 1.70272482E12, "maxY": 25.366666666666667, "series": [{"data": [[1.70272482E12, 25.366666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70272482E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.3333333333333333, "minX": 1.70272482E12, "maxY": 15.05, "series": [{"data": [[1.70272482E12, 0.3333333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70272482E12, 4.35]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70272488E12, 5.633333333333334], [1.70272482E12, 15.05]], "isOverall": false, "label": "503", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70272488E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.70272482E12, "maxY": 13.683333333333334, "series": [{"data": [[1.70272482E12, 0.16666666666666666]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.70272488E12, 2.816666666666667], [1.70272482E12, 13.683333333333334]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70272482E12, 4.35]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70272488E12, 2.816666666666667], [1.70272482E12, 1.3666666666666667]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.70272482E12, 0.16666666666666666]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70272488E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 4.683333333333334, "minX": 1.70272482E12, "maxY": 15.05, "series": [{"data": [[1.70272482E12, 4.683333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70272488E12, 5.633333333333334], [1.70272482E12, 15.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70272488E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 18000000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

